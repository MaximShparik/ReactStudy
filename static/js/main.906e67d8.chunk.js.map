{"version":3,"sources":["redux/message-reducer.js","img/logo.png","img/preloader.gif","components/common/preloader/Preloader.jsx","serviceWorker.js","redux/navbar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/friends-reducer.js","redux/redux-store.js","components/header/Header.js","components/header/Header-Container.jsx","components/Nav/Nav.js","components/users/Users.jsx","redux/selectors.js","components/users/Users-Container.jsx","components/login/login.jsx","hoc/WithSuspense.js","components/friends/Friends.jsx","components/friends/Friends-Container.jsx","App.js","index.js","components/common/formsControler/FormsControler.js","img/ava.jpg","hoc/WithAuthRedirect.js","utilits/validators/validators.js","api/api.js","redux/profile-reducer.js"],"names":["initialData","dataMessage","isFetching","isSending","dataDialogsName","id","name","AddMessage","MyMessageText","type","SetMessages","ToggleIsFetching","Sending","GetMessagesInitial","dispatch","GetMessagesApi","then","response","data","items","GetMessagesThunkCreator","SendMessageThunkCreator","userId","body","SendMessageApi","message","recipientId","messageReducer","state","action","MyNewMessage","from","senderName","text","class","module","exports","Preloader","props","className","src","preloader","alt","Boolean","window","location","hostname","match","dataBestFriends","avasrc","navbarReducer","initialState","dataUsers","pageSize","totalUsersCount","currentPage","followingInProcces","Follow","UnFollow","SetCurrentPage","FollowingInProcces","UnFollowThunkCreator","UnFollowUser","resultCode","usersReducer","map","u","followed","users","totalCount","filter","login","email","isAuth","captchaUrl","SetUserData","GetUserData","a","Auth","GetCaptchaURL","SecurityApi","url","payload","SetCaptcha","authReducer","initialized","appReducer","friendsReducer","reducers","combineReducers","Profile","profileReducer","Message","Friends","Users","Navbar","App","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","Header","Logo","onClick","LogoutHOC","to","HeaderContainer","this","React","Component","connect","Logout","reload","Nav","pagesCount","Math","ceil","pages","i","push","el","onPageChanged","elem","key","photos","small","Ava","disabled","some","FollowThunkCreator","getUsers","UsersContainer","createSelector","pageNumber","GetUsersThunkCreator","compose","GetUsers","FollowUser","WithAuthRedirect","ReduxLoginForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","requiredField","error","LoginHOC","password","rememberMe","captcha","Login","messages","length","stopSubmit","_error","formData","SuspenseHOC","fallback","FriendsContainer","GetFriendsThunkCreator","GetFriends","CurrentDialogContainer","lazy","ProfileContainer","catchAllErrors","promiseRejectionEvent","alert","InitializeApp","addEventListener","removeEventListener","exact","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Textarea","input","meta","hasError","touched","mapStateToPropsForRedirect","RedirectComponent","value","maxLenghtCreator","maxLenght","instance","axios","baseURL","withCredentials","headers","get","delete","post","GetProfile","GetStatus","UpdateStatus","status","put","savePhotoApi","photoFile","FormData","append","SaveProfileApi","profile","dataPostOld","profileUpdateStatus","AddPost","MyPostText","SetStatus","GetUserStatus","UpdateUserStatus","savePhoto","file","GetUsersProfile","SaveProfile","getState","NewOldPost","dataNewPostText","aboutMe","lookingForAJob","lookingForAJobDescription","fullName"],"mappings":"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","file":"static/js/main.906e67d8.chunk.js","sourcesContent":["import {GetMessagesApi,SendMessageApi} from '../api/api'\n// const UPDATE_NEW_MESSAGE_AREA = 'UPDATE-NEW-MESSAGE-AREA'\nconst ADD_MESSAGE = 'ADD-MESSAGE'\nconst SET_MESSAGE = 'SET-MESSAGE'\nconst TOGGLE_IS_FETCHING ='TOGGLE-IS-FETCHING'\nconst SENDING ='SENDING'\n\nlet initialData = {\n  dataMessage:[],\n  isFetching: false,\n  isSending: false,\n  dataDialogsName:[\n    {id:7099, name:'7099'},\n  ]\n};\n// начальные данные чтобы редакс мог запустить и отрендерить начальное состояние\n\nconst messageReducer=(state=initialData,action)=> {\n  switch(action.type) {\n    case ADD_MESSAGE:\n    let MyNewMessage = {\n      from:action.MyMessageText.senderName,\n      text:action.MyMessageText.body,\n      class:'me'\n    }\n    return {\n      ...state,\n      dataMessage: [...state.dataMessage, MyNewMessage],\n      // dataNewMessageText: ''\n    };\n    case SET_MESSAGE:\n    return {\n      ...state,\n      dataMessage: action.dataMessage\n    };\n    case TOGGLE_IS_FETCHING:{\n      return{...state, isFetching: action.isFetching}\n    }\n    case SENDING:{\n      return{...state, isSending: action.isSending}\n    }\n    default:\n    return state;\n  }\n}\n\nexport const AddMessage = (MyMessageText) => {\n  return {\n    type: ADD_MESSAGE,\n    MyMessageText:MyMessageText\n  }\n}\n\nexport const SetMessages = (dataMessage) => {\n  return {\n    type: SET_MESSAGE,\n    dataMessage: dataMessage\n  }\n}\nexport const ToggleIsFetching = (isFetching) => {\n  return {type: TOGGLE_IS_FETCHING, isFetching: isFetching}\n}\nexport const Sending = (isSending) => {\n  return {type: SENDING, isSending: isSending}\n}\n\nexport const GetMessagesInitial = (id)=>{\n  return (dispatch)=>{\n    dispatch(ToggleIsFetching(true))\n    GetMessagesApi(id).then(response=>{\n      dispatch(ToggleIsFetching(false))\n      dispatch(SetMessages(response.data.items))\n    })\n  }\n}\n\nexport const GetMessagesThunkCreator = (id)=>{\n  return (dispatch)=>{\n    GetMessagesApi(id).then(response=>{\n      dispatch(SetMessages(response.data.items))\n      dispatch(Sending(false))\n    })\n  }\n}\n\nexport const SendMessageThunkCreator = (userId,body)=>{\n  return (dispatch)=>{\n    dispatch(Sending(true))\n    AddMessage(body)\n    SendMessageApi(userId,body).then(response=>{\n      dispatch(GetMessagesThunkCreator(response.data.data.message.recipientId))\n    })\n  }\n}\n\n\nexport default messageReducer;\n","module.exports = __webpack_public_path__ + \"static/media/logo.776b9bd2.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.07f42c61.gif\";","import React from 'react';\nimport preloader from '../../../img/preloader.gif'\n\nlet Preloader = (props) => {\n  return <div className='preloader'>\n          <img src={preloader} alt='Wait :)'/>\n        </div>\n}\n\nexport default Preloader\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialData = {\n  dataBestFriends:[\n    {name:'Adolf', avasrc:'ava.jpg'},\n    {name:'Max', avasrc:'ava.jpg'},\n    {name:'Roma', avasrc:'ava.jpg'},\n    {name:'Adolf', avasrc:'ava.jpg'},\n    {name:'Max', avasrc:'ava.jpg'},\n    {name:'Roma', avasrc:'ava.jpg'}\n  ]\n};\n// начальные данные чтобы редакс мог запустить и отрендерить начальное состояние\n\nexport const navbarReducer=(state=initialData,action)=> {\n\n  return state;\n}\n\nexport default navbarReducer;\n","import {GetUsers,FollowUser,UnFollowUser} from '../api/api'\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET-USERS'\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\nconst SET_TOTAL_USERS_COUNT ='SET-TOTAL-USERS-COUNT'\nconst TOGGLE_IS_FETCHING ='TOGGLE-IS-FETCHING'\nconst FOLLOWING_IN_PROCCES = 'FOLLOWING-IN-PROCCES'\n\nlet initialState = {\n  dataUsers:[],\n  pageSize: 96,\n  totalUsersCount:0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProcces: []\n};\n\nconst usersReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        dataUsers: state.dataUsers.map(u=>{\n          if (u.id === action.userId){\n            return{...u, followed:true}\n          }\n          return u;\n        })\n      }\n    case UNFOLLOW:\n      return {\n        ...state,\n        dataUsers: state.dataUsers.map(u=>{\n          if (u.id === action.userId){\n            return{...u, followed:false}\n          }\n          return u;\n        })\n      }\n    case SET_USERS:{\n      return{...state, dataUsers:action.users}\n    }// в users мы закидываем данные пришедшие из action\n    case SET_CURRENT_PAGE:{\n      return{...state, currentPage: action.currentPage}\n    }\n    case SET_TOTAL_USERS_COUNT:{\n      return{...state, totalUsersCount: action.totalCount}\n    }\n    case TOGGLE_IS_FETCHING:{\n      return{...state, isFetching: action.isFetching}\n    }\n    case FOLLOWING_IN_PROCCES:{\n      return{...state,\n        followingInProcces: action.isFetching\n          ?[...state.followingInProcces, action.id]\n          :state.followingInProcces.filter(id=>id!==action.id)\n        }\n    }\n    default:\n      return state;\n  }\n}\n\nexport const Follow = (userId) => {\n  return {type: FOLLOW,userId: userId}\n}\nexport const UnFollow = (userId) => {\n  return {type: UNFOLLOW, userId: userId}\n}\nexport const SetUsers = (users) => {\n  return {type: SET_USERS, users: users}\n}\nexport const SetCurrentPage = (currentPage) => {\n  return {type: SET_CURRENT_PAGE, currentPage: currentPage}\n}\nexport const SetTotalUsersCount = (totalCount) => {\n  return {type: SET_TOTAL_USERS_COUNT, totalCount: totalCount}\n}\nexport const ToggleIsFetching = (isFetching) => {\n  return {type: TOGGLE_IS_FETCHING, isFetching: isFetching}\n}\nexport const FollowingInProcces = (isFetching,id) => {\n  return {type: FOLLOWING_IN_PROCCES, isFetching,id}\n}\n\nexport const GetUsersThunkCreator = (currentPage,pageSize)=>{\n\n  return (dispatch)=>{\n\n    dispatch(ToggleIsFetching(true))\n\n    GetUsers(currentPage,pageSize).then(response=>{\n        dispatch(ToggleIsFetching(false))\n        dispatch(SetUsers(response.items))\n        dispatch(SetCurrentPage(currentPage))\n        dispatch(SetTotalUsersCount(response.totalCount))\n      })\n    }\n}\n\nexport const FollowThunkCreator = (id)=>{\n\n  return (dispatch)=>{\n\n    dispatch(FollowingInProcces(true,id))\n    FollowUser(id).then(response=>{\n        if (response.resultCode===0){\n            dispatch(Follow(id))\n        }\n        dispatch(FollowingInProcces(false,id))\n    })\n  }\n}\n\nexport const UnFollowThunkCreator = (id)=>{\n\n  return (dispatch)=>{\n\n    dispatch(FollowingInProcces(true,id))\n    UnFollowUser(id).then(response=>{\n        if (response.resultCode===0){\n            dispatch(UnFollow(id))\n        }\n        dispatch(FollowingInProcces(false,id))\n    })\n  }\n}\n\nexport default usersReducer;\n","import {Auth,Login,Logout,SecurityApi} from '../api/api'\nimport {stopSubmit} from 'redux-form'\n\n\nconst SET_USER_DATA = 'SET-USER-DATA'\nconst GET_CAPTCHA_URL = 'GET-CAPTCHA-URL'\n\n\nlet initialState = {\n  id: null,\n  login: null,\n  email: null,\n  isAuth: false,\n  captchaUrl: null\n}\n\n\nconst authReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.data,\n        isAuth: true\n      // данные пришедшие из action с сервера\n      //  перезатрут данные из state\n      }\n    case GET_CAPTCHA_URL:\n      return{\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport const SetUserData = (data) => {\n  return {\n    type: SET_USER_DATA,\n    data: data\n  }\n}\nexport const SetCaptcha = (captchaUrl) => {\n  return {\n    type: GET_CAPTCHA_URL,\n    payload: {captchaUrl}\n  }\n}\n\nexport const GetUserData = () => async (dispatch) => {\n  let response = await Auth()\n        if(response.data.resultCode ===0){\n          dispatch(SetUserData(response.data.data))\n        }\n}\n// можно использовать await\n// можно then\n// так-то пофиг, но как варик\n\nexport const LoginHOC = (email, password, rememberMe, captcha) => (dispatch) => {\n  Login(email, password, rememberMe, captcha).then(response=>{\n        if(response.data.resultCode ===0){\n          dispatch(GetUserData())\n        } else if (response.data.resultCode ===10){\n          dispatch(GetCaptchaURL())\n        } else {\n          let message = response.data.messages.length>0 ? response.data.messages[0] :'Something is wrong'\n          let action = stopSubmit('login',{_error:message})\n          dispatch(action)\n        }\n  });\n}\n// stopSubmit это функия из redux-form\n// которая помогает обробатывать ошибки\n// должны передать в него название формы\n// которую должны остановить\n\nexport const GetCaptchaURL = () => (dispatch) => {\n  SecurityApi().then(response=>{\n    const captchaUrl = response.data.url\n    dispatch(SetCaptcha(captchaUrl))\n  });\n}\n\n\nexport const LogoutHOC = () => (dispatch) => {\n  Logout().then(response=>{\n        if(response.data.resultCode ===0){\n          dispatch(SetUserData(null))\n          window.location.reload()\n        }\n  });\n}\n\n\nexport default authReducer;\n","import {GetUserData} from '../redux/auth-reducer'\n\n\n\nconst SET_INITIALIZED = 'SET-INITIALIZED'\n\nlet initialState = {\n  initialized:false\n}\n\n\nconst appReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case SET_INITIALIZED:\n      return {\n        ...state,\n        initialized: true\n      }\n    default:\n      return state;\n  }\n}\n\nexport const InitializedSuccess = () => {\n  return {\n    type: SET_INITIALIZED\n  }\n}\n\nexport const InitializeApp = () => (dispatch) => {\n  // dispatch(GetUserData())\n  let promise = dispatch(GetUserData())\n  // Дожидаемся ответа от функции\n  // потому что в GetUserData написали ретурн\n  promise.then(()=>{\n    dispatch(InitializedSuccess())\n  })\n}\n\n\n\nexport default appReducer;\n","import {GetFriends} from '../api/api'\nimport {ToggleIsFetching} from './users-reducer'\n\nconst SET_FRIENDS = 'SET-FRIENDS'\n\nlet initialState = {\n  dataUsers:[],\n  isFetching: false\n};\n\nconst friendsReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case SET_FRIENDS:{\n      return {...state,dataUsers:action.users}\n    }\n    default:\n      return state;\n  }\n}\n\nexport const SetFriends = (users) => {\n  return {type: SET_FRIENDS,users: users}\n}\n\nexport const GetFriendsThunkCreator = ()=>{\n\n  return (dispatch)=>{\n    dispatch(ToggleIsFetching(true))\n    GetFriends().then(response=>{\n      dispatch(ToggleIsFetching(false))\n      dispatch(SetFriends(response.items))\n      // debugger\n    })\n  }\n}\n\n\nexport default friendsReducer;\n","import {combineReducers,createStore,applyMiddleware} from 'redux'\nimport profileReducer from './profile-reducer'\nimport messageReducer from './message-reducer'\nimport navbarReducer from './navbar-reducer'\nimport usersReducer from './users-reducer'\nimport authReducer from './auth-reducer'\nimport appReducer from './app-reducer'\nimport friendsReducer from './friends-reducer'\nimport thunkMiddleware from 'redux-thunk'\nimport {reducer as formReducer} from 'redux-form'\n\nlet reducers = combineReducers({\n  Profile:profileReducer,\n  Message:messageReducer,\n  Friends:friendsReducer,\n  Users:usersReducer,\n  Navbar:navbarReducer,\n  Auth:authReducer,\n  App:appReducer,\n  form:formReducer\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom'\nimport '../.././App.css';\nimport Logo from '../../img/logo.png'\n\nconst Header = (props) => {\n\n  return (\n    <header className='header'>\n      <img src={Logo} alt=\"Logo\" className='header__logo'></img>\n\n\n        {props.isAuth\n          ?<div className='header__auth'><p>{props.login}</p><button onClick={props.LogoutHOC}>LogOut</button></div>\n          :<NavLink to='/login' className='header__auth'></NavLink>\n        }\n\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from './Header'\nimport {connect} from 'react-redux';\nimport {LogoutHOC} from '../../redux/auth-reducer'\n\n\nclass HeaderContainer extends React.Component{\n\n\n\n  render(){\n    return <Header {...this.props}/>\n  }\n}\n\nlet mapStateToProps=(state)=>({\n    isAuth: state.Auth.isAuth,\n    login: state.Auth.login\n})\n// тут мы пишем какие данные нам нужны из стейта\n\nexport default connect(mapStateToProps,{LogoutHOC})(HeaderContainer)\n","import React from 'react';\nimport '../.././App.css';\n// import BestFriends from './BestFriends'\nimport {NavLink} from 'react-router-dom'\n\nconst Nav = (props) => {\n\n  // let state = props.store.getState();\n// пометка когда исправить в app.js\n\n  // такс бля, мы прокидываем store\n  // но там только функции, нет данных,\n  // но там есть функция которая даёт нам\n  // подтянуть данные, именно она сверху\n\n\n  // let dataRenderBestFriends =\n  //   state.Navbar.dataBestFriends.map( el => <BestFriends name={el.name} avasrc={el.avasrc}/>)\n// пометка когда исправить в app.js\n  return (\n    <nav className='nav'>\n      <NavLink to='/friends' className='nav__friends'>Friends</NavLink>\n\n      <NavLink to='/profile'>Profile</NavLink>\n      <NavLink to='/users'>Users</NavLink>\n      <NavLink to='/dialogs'>Messages</NavLink>\n      <NavLink to='/news'>News</NavLink>\n      <NavLink to='/music'>Music</NavLink>\n      <NavLink to='/settings'>Settings</NavLink>\n    </nav>\n  );\n}\n\n// <div className='nav__bestfriend'>\n//   {dataRenderBestFriends}\n//   </div>\n// пометка когда исправить в app.js\n// вернуть потом в пустое место между навлинками\n\nexport default Nav;\n","import React from 'react';\nimport '../.././App.css';\nimport {NavLink} from 'react-router-dom'\nimport Ava from '../../img/ava.jpg'\n\nlet Users = (props) =>{\n  let pagesCount = Math.ceil(props.totalUsersCount/props.pageSize);\n  let pages = [];\n  for (let i=1; i<=pagesCount;i++){\n    pages.push(i)\n  }\n\n  return(\n    <div className='users'>\n      <div className='users__page'>\n        {pages.map(el=>{\n          return <span className={props.currentPage === el && 'users__page-current'}\n          onClick={()=>{props.onPageChanged(el)}}>{el} </span>\n        })}\n      </div>\n      <div className='users__flex'>\n      {props.dataUsers.map(elem=><div className='user__item' key={elem.id}>\n      <div className='user__item-face'>\n        <NavLink to={'/profile/'+elem.id}>\n          <img src={elem.photos.small!=null ? elem.photos.small:Ava} alt=\"ava\" className='user__ava'/>\n        </NavLink>\n        {elem.followed\n          ?<button disabled={props.followingInProcces.some(id=>id===elem.id)} className='user__follow'\n            onClick={()=>{props.UnFollowThunkCreator(elem.id)}}>\n              Unfollow</button>\n\n          :<button disabled={props.followingInProcces.some(id=>id===elem.id)} className='user__follow'\n            onClick={()=>{props.FollowThunkCreator(elem.id)}}>\n              Follow</button>}\n      </div>\n        <div className='user__info'>\n          <div className='user__info-name'>{elem.name}</div>\n        </div>\n      </div>)}\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default Users;\n","import {createSelector} from 'reselect'\n\nexport const getUsers =(state)=>{\n  return state.Users.dataUsers\n}\n\nexport const pageSize =(state)=>{\n  return state.Users.pageSize\n}\n\n// export const dataUsersSelector = (state)=>{\n//   return dataUsers(state).filter(u=>true)\n// }\n\nexport const dataUsersSuperSelector = createSelector(getUsers,pageSize,\n  (dataUsers, pageSize)=>{\n    return dataUsers.filter(u=>true)\n})\n// эта функция создана с бибилиотекой реселектом для того чтобы\n// не запускать сложную логику которая может лежать в этих функциях\n// она будет запускаться только после определения\n// есть ли разница в требуемом от неё ответе\n// данные для сравнения она берёт из более простого селекора\n// dataUser\n// вообщем она вызывается только если входные данные меняются\n// если не меняются следовательно ответ функции тоже не будет меняться\n// выпуск 83\n// селектор может зависить от многих селекторов\n// getUsers,pageSize, описание от чего зависит большой селетор\n","import React from 'react';\nimport {Follow,UnFollow,SetCurrentPage,FollowingInProcces,GetUsersThunkCreator,UnFollowThunkCreator,FollowThunkCreator} from '../.././redux/users-reducer'\nimport {connect} from 'react-redux';\nimport Users from './Users'\nimport Preloader from '../common/preloader/Preloader'\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect'\nimport {compose} from 'redux'\nimport {getUsers,pageSize} from '../../redux/selectors'\n\n\nclass UsersContainer extends React.Component{\n\n  componentDidMount() {\n    this.props.GetUsersThunkCreator(this.props.currentPage,this.props.pageSize)\n  }\n  onPageChanged=(pageNumber)=>{\n    this.props.GetUsersThunkCreator(pageNumber,this.props.pageSize)\n  }\n\n  render() {\n    return <>\n      {this.props.isFetching?\n        <Preloader/>\n        :null}\n      <Users\n        totalUsersCount={this.props.totalUsersCount}\n        pageSize={this.props.pageSize}\n        currentPage={this.props.currentPage}\n        dataUsers={this.props.dataUsers}\n        onPageChanged={this.onPageChanged}\n        UnFollow={this.props.UnFollow}\n        Follow={this.props.Follow}\n        followingInProcces={this.props.followingInProcces}\n        UnFollowThunkCreator={this.props.UnFollowThunkCreator}\n        FollowThunkCreator={this.props.FollowThunkCreator}\n      />\n    </>\n  }\n}\n\nlet mapStateToProps =(state)=>{\n  return {\n    dataUsers: getUsers(state),\n    pageSize: pageSize(state),\n    totalUsersCount: state.Users.totalUsersCount,\n    currentPage:state.Users.currentPage,\n    isFetching:state.Users.isFetching,\n    followingInProcces:state.Users.followingInProcces\n  }\n}\n// можно настроить селокторы для каждого пропса\n// но нах это нужно не знаю\n// он говорит нужно, для примера 2 сделал\n\n// сюда можно воткнуть dataUsersSuperSelector(state)\n// и передать туда что-то\n// она не будет постояно вызываться и грузить процессор\n// а зупуститься только когда нужно\n\nexport default compose(\n  connect(mapStateToProps,\n    {Follow, UnFollow, SetCurrentPage,\n      FollowingInProcces, GetUsersThunkCreator,\n      UnFollowThunkCreator,FollowThunkCreator}),\n  WithAuthRedirect\n)(UsersContainer)\n","import React from 'react';\nimport '../.././App.css';\nimport {reduxForm,Field} from 'redux-form'\nimport {Input} from '../common/formsControler/FormsControler'\nimport {requiredField} from '../../utilits/validators/validators'\nimport {connect} from 'react-redux'\nimport {LoginHOC} from '../../redux/auth-reducer'\nimport {Redirect} from 'react-router-dom'\n\nconst LoginForm = (props) => {\n  return (\n      <form onSubmit={props.handleSubmit}>\n\n      {props.captchaUrl && <img src={props.captchaUrl}/>}\n      {props.captchaUrl && <Field placeholder=''\n                            name='captcha'\n                            component={Input}\n                            validate={[requiredField]}\n                            />}\n\n        <div>\n          <Field placeholder='Email'\n            name='email'\n            component={Input}\n            validate={[requiredField]}\n          />\n        </div>\n        <div>\n          <Field placeholder='Password'\n            name='password'\n            component={Input}\n            validate={[requiredField]}\n          />\n        </div>\n        <div className='remember'>\n          <Field component={Input}\n            name='rememberMe'\n            type='checkbox'\n\n            // validate={[requiredField]}\n          /> remember me\n        </div>\n\n        {props.error && <div className='form-login-error'>{props.error}</div>}\n\n        <div>\n          <button>LogIn</button>\n        </div>\n      </form>\n  )\n}\n// {props.error && <div className='form-login-error'>{props.error}</div>}\n// это значит если в пропсах прихлдит ерор\n// покажи этот див\n\n\nconst ReduxLoginForm = reduxForm({\n  form:'login'\n})(LoginForm)\n// это название формы\n// оно нужно будет для stopSubmit\n\nconst Login =(props)=>{\n\n  const onSubmit=(formData)=>{\n    props.LoginHOC(formData.email,formData.password,formData.rememberMe,formData.captcha)\n  }\n\n  if (props.isAuth) {\n    return <Redirect to='/profile'/>\n  }\n\n  return(\n    <div className='login'>\n      <h1>LogIn</h1>\n      <ReduxLoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n  )\n}\n\nconst mapStateToProps=(state)=>({\n  isAuth: state.Auth.isAuth,\n  captchaUrl: state.Auth.captchaUrl\n})\n\nexport default connect(mapStateToProps,{LoginHOC})(Login)\n","import React, { Suspense } from 'react';\nimport Preloader from '../components/common/preloader/Preloader'\n\nconst SuspenseHOC = (Component) =>{\n  return (props)=>{\n    return (<Suspense fallback={<Preloader/>}>\n        <Component {...props} />\n      </Suspense>\n    )\n  }\n}\n\nexport default SuspenseHOC\n","import React, { useState, useEffect } from 'react';\nimport '../.././App.css';\nimport Ava from '../../img/ava.jpg'\nimport {NavLink} from 'react-router-dom'\n\nlet Friends = (props) =>{\n  // debugger\n\n  let onClick = function(el){\n      props.UnFollowThunkCreator(el)\n      props.onPageChanged()\n   }\n\n\n  return(\n    <div className='friends'>\n    {props.dataUsers.map(el=>{\n      if (el.followed == true){\n        return(\n          <div className='friend'>\n          <NavLink to={'/profile/'+el.id}>\n            <img src={el.photos.small!=null ? el.photos.small:Ava} alt=\"ava\" className='user__ava'/>\n          </NavLink>\n          <p>{el.name}</p>\n          <button\n            className='user__follow'\n            onClick={()=>onClick(el.id)}>\n              Unfollow</button>\n          </div>\n        )\n      }\n    })}\n\n    </div>\n  )\n}\n\nexport default Friends;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport Friends from './Friends'\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect'\nimport {compose} from 'redux'\nimport Preloader from '../common/preloader/Preloader'\nimport {getUsers} from '../../redux/selectors'\nimport {GetFriendsThunkCreator} from '../../redux/friends-reducer'\nimport {UnFollowThunkCreator} from '../../redux/users-reducer'\n\nclass FriendsContainer extends React.Component{\n\n  componentDidMount() {\n    this.props.GetFriendsThunkCreator()\n  }\n\n  onPageChanged=()=>{\n    this.props.GetFriendsThunkCreator()\n  }\n\n\n\n  render() {\n    return <>\n      {this.props.isFetching?\n        <Preloader/>\n        :null}\n      <Friends\n        dataUsers={this.props.dataUsers}\n        UnFollowThunkCreator={this.props.UnFollowThunkCreator}\n        GetFriendsThunkCreator={this.props.GetFriendsThunkCreator}\n        onPageChanged={this.onPageChanged}\n      />\n    </>\n  }\n}\n\nlet mapStateToProps =(state)=>{\n  return {\n    dataUsers: state.Friends.dataUsers,\n    isFetching:state.Friends.isFetching\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps,\n    {GetFriendsThunkCreator,UnFollowThunkCreator}),\n  WithAuthRedirect\n)(FriendsContainer)\n","import React from 'react';\nimport {Switch} from 'react-router-dom'\nimport './App.css';\nimport HeaderContainer from './components/header/Header-Container'\nimport Nav from './components/Nav/Nav'\nimport UsersContainer from './components/users/Users-Container'\nimport {HashRouter, Route} from 'react-router-dom'\nimport Login from './components/login/login'\nimport {InitializeApp} from './redux/app-reducer'\nimport {connect} from 'react-redux';\nimport Preloader from './components/common/preloader/Preloader'\nimport SuspenseHOC from './hoc/WithSuspense'\nimport FriendsContainer from './components/friends/Friends-Container'\n\nconst CurrentDialogContainer = React.lazy(() => import('./components/dialogs/message/CurrentDialog-Container'));\nconst ProfileContainer = React.lazy(() => import('./components/profile/Profile-Container'));\n\nclass App extends React.Component {\n\n  catchAllErrors =(promiseRejectionEvent)=>{\n    alert(promiseRejectionEvent)\n  }\n\n  componentDidMount(){\n    this.props.InitializeApp()\n    window.addEventListener('unhandledrejection', this.catchAllErrors)\n  }\n  componentWillUnmount(){\n    window.removeEventListener('unhandledrejection', this.catchAllErrors)\n  }\n\n  render(){\n\n    if(!this.props.initialized){\n      return <Preloader/>\n    }\n    return (\n      <HashRouter>\n        <div className='app-wrapper'>\n          <HeaderContainer/>\n          <Nav/>\n          <Switch>\n            <Route exact path='/'\n              render={SuspenseHOC(ProfileContainer)}\n            />\n            <Route path='/profile/:userId?'\n              render={SuspenseHOC(ProfileContainer)}\n            />\n            <Route path='/dialogs'\n              render={SuspenseHOC(CurrentDialogContainer)}\n            />\n            <Route path='/users'\n              render={ () => <UsersContainer/>}\n            />\n            <Route exact path='/login'\n              render={ () => <Login/>}\n            />\n            <Route exact path='/friends'\n              render={ () => <FriendsContainer/>}\n            />\n            <Route path='*'\n              render={ () => <div id='error'>404 ))))))))</div>}\n            />\n          </Switch>\n\n        </div>\n      </HashRouter>\n    );\n  }\n}\n// <Nav store={props.store}/>\n// чтобы отрисовывать вкладку друзей\n// потом нужно будет сделать контейнерную для нав\n\n\nlet mapStateToProps=(state)=>({\n    initialized:state.App.initialized\n})\n\n\nexport default connect(mapStateToProps,{InitializeApp})(App)\n\n// export default compose(\n//   connect(mapStateToProps,{GetUserData}),\n//   withRouter\n// )(App)\n\n// он добавлял withRouter в 80 выпуске\n// хз зачем, у меня и без него работало\n","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport {Provider} from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App store={store}/>\n    </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import React from 'react';\nimport '../../../App.css';\n\nexport const Textarea = ({input,meta,...props}) =>{\n//мы деструктеризируем пропсы чтобы передать\n// то что нужно для работы тексэрии\n// деструктуризация и рестоператор-эти темы\nconst hasError = meta.touched&&meta.error\n\n  return (\n    <div className={(hasError?'form-error':'')}>\n      <textarea {...input} {...props}/>\n      {hasError&&<p className='form-control-text'>{meta.error}</p>}\n    </div>\n  )\n}\n// если мы из мета пришли данные что\n// мы ронули форму и\n// если в мета пришол ерор из валидатора\n// покажи спан и присвой класс\n\n\nexport const Input = ({input,meta,...props}) =>{\n\nconst hasError = meta.touched&&meta.error\n\n  return (\n    <div className={(hasError?'form-error':'')}>\n      <input {...input} {...props}/>\n      {hasError&&<p className='form-control-text'>{meta.error}</p>}\n    </div>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/ava.bbb874fe.jpg\";","import {Redirect} from 'react-router-dom'\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nlet mapStateToPropsForRedirect=(state)=>{\n  return{\n    isAuth:state.Auth.isAuth\n  }\n}\n\nexport const WithAuthRedirect=(Component)=>{\n  class RedirectComponent extends React.Component {\n    render(){\n      if (!this.props.isAuth){\n        return <Redirect to='/login'/>\n      }\n      return <Component {...this.props} />\n    }\n  }\n\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n\n  return ConnectedAuthRedirectComponent\n}\n","export const requiredField = value =>{\n  if (value) return undefined\n  return 'Field is required'\n}\n\nexport const maxLenghtCreator = (maxLenght) => value =>{\n  // if (value) return undefined\n  if (value.length>maxLenght) return 'To many words'\n  return undefined\n}\n","import * as axios from 'axios'\n\nconst instance = axios.create({\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n      \"API-KEY\":\"1628af70-c7bb-465f-b17e-a501a04111fb\"\n    },\n})\n\n\nexport const GetUsers =(currentPage,pageSize)=>{\n  return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n    .then(response=>response.data)\n}\n\nexport const GetFriends =()=>{\n  return instance.get(`users?count=100`)\n    .then(response=>response.data)\n}\n\nexport const UnFollowUser =(id)=>{\n  return instance.delete(`follow/${id}`)\n    .then(response=>response.data)\n}\n\nexport const FollowUser =(id)=>{\n  return instance.post(`follow/${id}`,{})\n  .then(response=>response.data)\n}\n\nexport const GetProfile =(id)=>{\n  return instance.get(`profile/` + id)\n}\n\nexport const Auth =()=>{\n  return instance.get(`auth/me`)\n}\n\nexport const GetStatus =(id)=>{\n  return instance.get(`profile/status/ `+id)\n}\n\nexport const UpdateStatus =(status)=>{\n  return instance.put(`profile/status`,{\n    status:status\n  })\n}\n\nexport const Login =(email, password, rememberMe, captcha=null)=>{\n  return instance.post(`auth/login`,{\n    email:email,\n    password:password,\n    rememberMe:false,\n    captcha:captcha\n  })\n}\n\nexport const Logout =()=>{\n  return instance.delete(`auth/login`)\n}\n\nexport const savePhotoApi=(photoFile)=>{\n  const formData=new FormData()\n  formData.append('image', photoFile)\n  return instance.put(`profile/photo`,formData, {\n    headers:{\n      'Content-Type':'multipart/form-data'\n    }\n  })\n}\nexport const SaveProfileApi =(profile)=>{\n  return instance.put(`profile`,profile)\n}\n\nexport const SecurityApi =()=>{\n  return instance.get(`security/get-captcha-url`)\n}\n\nexport const StartChattingApi =(userId)=>{\n  return instance.put(`dialogs/${userId}`)\n}\n\nexport const GetMessagesApi =(userId)=>{\n  return instance.get(`dialogs/${userId}/messages`)\n}\n\nexport const SendMessageApi =(userId,body)=>{\n  return instance.post(`dialogs/${userId}/messages`,{\n    body:body\n  })\n}\n","import {GetProfile,GetStatus,UpdateStatus,savePhotoApi,SaveProfileApi} from '../api/api'\nimport {stopSubmit} from 'redux-form'\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\nconst SET_STATUS = 'SET-STATUS'\nconst SET_PHOTO_SUCCESS = 'SET-PHOTO-SUCCESS'\nconst SET_USER_PROFILE_INFO = 'SET-USER-PROFILE-INFO'\n// const UPDATE_STATUS ='UPDATE-STATUS'\n//\nconst SET_USER_ID = 'SET-USER-ID'\n//\nlet initialState = {\n  dataPostOld:[\n    {id:1, message:'Maxim'},\n    {id:2, message:'Stas'},\n    {id:3, message:'Kirill'},\n    {id:4, message:'Vanya'},\n    {id:5, message:'Scot'},\n    {id:6, message:'Tom'}\n  ],\n  profile: null,\n  profileUpdateStatus: null,\n  status: '',\n  // id: 2\n};\n// начальные данные чтобы редакс мог запустить и отрендерить начальное состояние\n\nconst profileReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case ADD_POST:\n      let NewOldPost = {\n        id: 5,\n        message: action.MyPostText,\n      };\n      return {\n        ...state,\n        dataPostOld: [...state.dataPostOld,NewOldPost],\n        dataNewPostText:''\n      }\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile\n      }\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status\n      }\n    case SET_USER_PROFILE_INFO:\n      return {\n        ...state,\n        profile: {...state.profile,\n          aboutMe:action.profile.aboutMe,\n          lookingForAJob:action.profile.lookingForAJob,\n          lookingForAJobDescription:action.profile.lookingForAJobDescription,\n          fullName:action.profile.fullName,}\n      }\n    // case UPDATE_STATUS:\n    //   return {\n    //     ...state,\n    //     status: action.status\n    //   }\n    //\n    case SET_USER_ID:\n      return {\n        ...state,\n        id: action.id\n      }\n    case SET_PHOTO_SUCCESS:\n      return {\n        ...state,\n        profile: {...state.profile, photos:action.photos}\n      }\n      // debugger\n    //\n    default:\n      return state;\n  }\n}\n\nexport const AddPost = (MyPostText) => {\n  return {\n    type: ADD_POST,\n    MyPostText:MyPostText\n  }\n}\n\nexport const SetUsersProfile = (profile) => {\n  return { type:SET_USER_PROFILE, profile: profile }\n}\nexport const SetStatus = (status) => {\n  return { type:SET_STATUS, status: status }\n}\nexport const SetPhotoSuccess = (photos) => {\n  return { type:SET_PHOTO_SUCCESS, photos: photos }\n}\nexport const SetUsersProfileInfo = (profile) => {\n  return { type:SET_USER_PROFILE_INFO, profile: profile }\n}\n// export const UpdateStatus = (status) => {\n//   return { type:UPDATE_STATUS, status: status }\n// }\n\nexport const GetUserStatus = (id) => async (dispatch)=> {\n  let response = await GetStatus(id)\n      dispatch(SetStatus(response.data))\n}\nexport const UpdateUserStatus = (status) =>(dispatch)=> {\n  UpdateStatus(status).then(response=>{\n    if(response.data.resultCode===0){\n      dispatch(SetStatus(status))\n    }\n  });\n}\n\nexport const savePhoto = (file) =>(dispatch)=> {\n  savePhotoApi(file).then(response=>{\n    if(response.data.resultCode===0){\n      dispatch(SetPhotoSuccess(response.data.data.photos))\n    }\n  });\n}\nexport const GetUsersProfile = (id) =>(dispatch)=> {\n  GetProfile(id).then(response=>{\n      dispatch(SetUsersProfile(response.data))\n  });\n}\n\n\n\nexport const SaveProfile = (profile) => (dispatch,getState) => {\n  const id = getState().Auth.id\n  const profileUpdateStatus = getState().Profile.profileUpdateStatus\n  SaveProfileApi(profile).then(response=>{\n    if(response.data.resultCode===0){\n       dispatch(GetUsersProfile(id))\n       // profileUpdateStatus = true\n    } else {\n      let action = stopSubmit('info',{_error:response.data.messages[0]})\n      dispatch(action)\n      // profileUpdateStatus = false\n    }\n  });\n}\n\n\n// не юзаная ((((\nexport const SetUsersId = (id) => {\n  return { type:SET_USER_ID, id: id }\n}\n//\n\nexport default profileReducer;\n"],"sourceRoot":""}