{"version":3,"sources":["components/dialogs/message/DialogsName.jsx","components/dialogs/message/Message.jsx","components/dialogs/message/CurrentDialog.jsx","components/dialogs/message/CurrentDialog-Container.jsx"],"names":["DialogsName","props","to","id","className","name","Message","class","src","Ava","alt","from","text","ReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","rows","placeholder","CurrentDialog","dataRenderMessage","dataMessage","map","el","avasrc","dataRenderDialogsName","dataDialogsName","values","SendMessage","MyMessageText","compose","connect","state","dataNewMessageText","dispatch","WithAuthRedirect"],"mappings":"kJAWeA,EAPK,SAACC,GAEnB,OACE,kBAAC,IAAD,CAASC,GAAI,YAAYD,EAAME,GAAIC,UAAU,iBAAiBH,EAAMI,O,iBCYzDC,EAfC,SAACL,GAEf,OACE,yBAAKG,UAAW,WAAYH,EAAMM,OAChC,yBAAKH,UAAU,mBACb,yBAAKI,IAAKC,IAAKC,IAAI,MAAMN,UAAU,iBACnC,0BAAMA,UAAU,iBAAiBH,EAAMU,OAEzC,yBAAKP,UAAU,iBACZH,EAAMW,Q,kCCsCTC,EAAmBC,YAAU,CACjCC,KAAK,WADkBD,EAnBL,SAACb,GAEnB,OACE,0BAAMG,UAAU,mBAAmBY,SAAUf,EAAMgB,cACjD,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXf,KAAK,gBACLD,UAAU,wBACViB,KAAK,IACLC,YAAY,oBAGd,4BAAQlB,UAAU,2BAAlB,YAWSmB,EA/CO,SAACtB,GAErB,IAAIuB,EACFvB,EAAMwB,YAAYC,KAAK,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAASf,KAAMe,EAAGf,KAAMD,KAAMgB,EAAGhB,KAAMJ,MAAOoB,EAAGpB,MAAOqB,OAAQD,EAAGC,YAC9FC,EACF5B,EAAM6B,gBAAgBJ,KAAK,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAatB,KAAMsB,EAAGtB,KAAMF,GAAIwB,EAAGxB,QAMtE,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,oBACZoB,GAEH,yBAAKpB,UAAU,iBACZyB,GAEH,kBAAChB,EAAD,CAAkBG,SAZF,SAACe,GACnB9B,EAAM+B,YAAYD,EAAOE,oB,gCCMdC,sBACbC,aAjBmB,SAACC,GACpB,MAAO,CACLC,mBAAoBD,EAAM9B,QAAQ+B,mBAClCZ,YAAaW,EAAM9B,QAAQmB,YAC3BK,gBAAgBM,EAAM9B,QAAQwB,oBAIT,SAACQ,GACxB,MAAM,CACJN,YAAY,SAACC,GACXK,EAASN,YAAYC,SAOzBM,IAFaL,CAGbX","file":"static/js/3.b0ec8d2f.chunk.js","sourcesContent":["import React from 'react';\nimport '../../.././App.css';\nimport {NavLink} from 'react-router-dom'\n\nconst DialogsName = (props) => {\n\n  return (\n    <NavLink to={'/dialogs/'+props.id} className='dialogs__item'>{props.name}</NavLink>\n  );\n}\n\nexport default DialogsName;\n","import React from 'react';\nimport '../../.././App.css';\nimport Ava from '../../../img/ava.jpg'\n\nconst Message = (props) => {\n// debugger\n  return (\n    <div className={'message '+ props.class}>\n      <div className='message__person'>\n        <img src={Ava} alt=\"ava\" className='message__ava'/>\n        <span className='message__name'>{props.from}</span>\n      </div>\n      <div className='message__area'>\n        {props.text}\n      </div>\n    </div>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport '../../.././App.css';\nimport DialogsName from './DialogsName'\nimport Message from './Message';\nimport {reduxForm,Field} from 'redux-form'\nimport {requiredField,maxLenghtCreator} from '../../../utilits/validators/validators'\nimport {Textarea} from '../../common/formsControler/FormsControler'\n\nconst CurrentDialog = (props) => {\n// debugger\n  let dataRenderMessage =\n    props.dataMessage.map( el => <Message text={el.text} from={el.from} class={el.class} avasrc={el.avasrc}/>)\n  let dataRenderDialogsName =\n    props.dataDialogsName.map( el => <DialogsName name={el.name} id={el.id}/>)\n\n  let AddNewMessage = (values) => {\n    props.SendMessage(values.MyMessageText);\n  }\n\n  return (\n    <div className='dialogs'>\n      <div className='dialogs__current'>\n        {dataRenderMessage}\n      </div>\n      <div className='dialogs__list'>\n        {dataRenderDialogsName}\n      </div>\n      <ReduxMessageForm onSubmit={AddNewMessage}/>\n    </div>\n  );\n}\n\nconst MessageForm = (props) => {\n\n  return (\n    <form className='dialogs__message' onSubmit={props.handleSubmit}>\n      <Field\n        component={Textarea}\n        name='MyMessageText'\n        className='dialogs__message-area'\n        rows=\"2\"\n        placeholder=\"Your message...\"\n        >\n      </Field>\n      <button className='dialogs__message-button'>\n        Send\n      </button>\n    </form>\n  )\n}\n\nconst ReduxMessageForm = reduxForm({\n  form:'message'\n})(MessageForm)\n\nexport default CurrentDialog;\n","import CurrentDialog from './CurrentDialog'\nimport {SendMessage} from '../../.././redux/message-reducer';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux'\nimport {WithAuthRedirect} from '../../../hoc/WithAuthRedirect'\n\nlet mapStateToProps =(state)=>{\n  return {\n    dataNewMessageText: state.Message.dataNewMessageText,\n    dataMessage: state.Message.dataMessage,\n    dataDialogsName:state.Message.dataDialogsName,\n  }\n}\n\nlet mapDispatchToProps = (dispatch)=>{\n  return{\n    SendMessage:(MyMessageText)=>{\n      dispatch(SendMessage(MyMessageText))\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps,mapDispatchToProps),\n  WithAuthRedirect\n)(CurrentDialog)\n\n// компосе автоатисеки вызовет первую снизу функцию\n// и передаст в неё карентдиалог\n// затем результат первой снизу закинет во вторую снизу\n"],"sourceRoot":""}