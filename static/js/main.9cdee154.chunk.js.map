{"version":3,"sources":["redux/message-reducer.js","api/api.js","img/logo.png","img/preloader.gif","components/common/preloader/Preloader.jsx","serviceWorker.js","redux/navbar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/friends-reducer.js","redux/redux-store.js","components/header/Header.js","components/header/Header-Container.jsx","components/Nav/Nav.js","components/users/Users.jsx","redux/selectors.js","components/users/Users-Container.jsx","components/login/login.jsx","hoc/WithSuspense.js","components/friends/Friends.jsx","components/friends/Friends-Container.jsx","App.js","index.js","components/common/formsControler/FormsControler.js","img/ava.jpg","hoc/WithAuthRedirect.js","utilits/validators/validators.js","redux/profile-reducer.js"],"names":["initialData","dataMessage","from","text","class","avasrc","dataDialogsName","id","name","SendMessage","MyMessageText","type","messageReducer","state","action","MyNewMessage","instance","axios","baseURL","withCredentials","headers","GetUsers","currentPage","pageSize","get","then","response","data","GetFriends","UnFollowUser","delete","FollowUser","post","GetProfile","Auth","GetStatus","UpdateStatus","status","put","Login","email","password","rememberMe","captcha","Logout","savePhotoApi","photoFile","formData","FormData","append","SaveProfileApi","profile","SecurityApi","module","exports","Preloader","props","className","src","preloader","alt","Boolean","window","location","hostname","match","dataBestFriends","navbarReducer","initialState","dataUsers","totalUsersCount","isFetching","followingInProcces","Follow","userId","UnFollow","SetCurrentPage","ToggleIsFetching","FollowingInProcces","UnFollowThunkCreator","dispatch","resultCode","usersReducer","map","u","followed","users","totalCount","filter","login","isAuth","captchaUrl","SetUserData","GetUserData","a","GetCaptchaURL","url","payload","SetCaptcha","authReducer","initialized","appReducer","friendsReducer","reducers","combineReducers","Profile","profileReducer","Message","Friends","Users","Navbar","App","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","Header","Logo","onClick","LogoutHOC","to","HeaderContainer","this","React","Component","connect","reload","Nav","pagesCount","Math","ceil","pages","i","push","el","onPageChanged","elem","key","photos","small","Ava","disabled","some","FollowThunkCreator","getUsers","UsersContainer","createSelector","pageNumber","GetUsersThunkCreator","compose","items","WithAuthRedirect","ReduxLoginForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","requiredField","error","LoginHOC","message","messages","length","stopSubmit","_error","SuspenseHOC","fallback","FriendsContainer","GetFriendsThunkCreator","CurrentDialogContainer","lazy","ProfileContainer","catchAllErrors","promiseRejectionEvent","alert","InitializeApp","addEventListener","removeEventListener","exact","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Textarea","input","meta","hasError","touched","mapStateToPropsForRedirect","RedirectComponent","value","maxLenghtCreator","maxLenght","dataPostOld","profileUpdateStatus","AddPost","MyPostText","SetStatus","GetUserStatus","UpdateUserStatus","savePhoto","file","GetUsersProfile","SaveProfile","getState","NewOldPost","dataNewPostText","aboutMe","lookingForAJob","lookingForAJobDescription","fullName"],"mappings":"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","file":"static/js/main.9cdee154.chunk.js","sourcesContent":["// const UPDATE_NEW_MESSAGE_AREA = 'UPDATE-NEW-MESSAGE-AREA'\nconst ADD_MESSAGE = 'ADD-MESSAGE'\n\nlet initialData = {\n  dataMessage:[\n    {from:'me', text:'Hi', class:'me', avasrc:'ava.jpg'},\n    {from:'not_me', text:'Hi))', avasrc:'ava.jpg'},\n    {from:'me', text:'How do you do?', class:'me', avasrc:'ava.jpg'},\n    {from:'not_me', text:'How do you do?', avasrc:'ava.jpg'},\n    {from:'me', text:'Cool', class:'me', avasrc:'ava.jpg'},\n    {from:'not_me', text:'Cool)))', avasrc:'ava.jpg'}\n  ],\n  dataDialogsName:[\n    {id:1, name:'Maxim'},\n    {id:2, name:'Stas'}\n  ],\n  // dataNewMessageText:'',\n};\n// начальные данные чтобы редакс мог запустить и отрендерить начальное состояние\n\nconst messageReducer=(state=initialData,action)=> {\n  switch(action.type) {\n    case ADD_MESSAGE:\n      let MyNewMessage = {\n        from:'me',\n        text:action.MyMessageText,\n        class:'me',\n        avasrc:'ava.jpg'\n      }\n      return {\n        ...state,\n        dataMessage: [...state.dataMessage, MyNewMessage],\n        // dataNewMessageText: ''\n      };\n    // case UPDATE_NEW_MESSAGE_AREA:\n    //   return {\n    //     ...state,\n    //     MyMessageText: action.newText\n    //   };\n    default:\n      return state;\n  }\n}\n\nexport const SendMessage = (MyMessageText) => {\n  return {\n    type: ADD_MESSAGE,\n    MyMessageText:MyMessageText\n  }\n}\n// export const UpdateNewMessageArea = (text) => {\n//     return { type:UPDATE_NEW_MESSAGE_AREA, newText: text }\n// }\n\nexport default messageReducer;\n","import * as axios from 'axios'\n\nconst instance = axios.create({\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n      \"API-KEY\":\"8f499ddb-6d41-430a-beb0-5377e3ad6d7e\"\n    },\n})\n\n\nexport const GetUsers =(currentPage,pageSize)=>{\n  return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n    .then(response=>response.data)\n}\n\nexport const GetFriends =()=>{\n  return instance.get(`users?count=100`)\n    .then(response=>response.data)\n}\n\nexport const UnFollowUser =(id)=>{\n  return instance.delete(`follow/${id}`)\n    .then(response=>response.data)\n}\n\nexport const FollowUser =(id)=>{\n  return instance.post(`follow/${id}`,{})\n  .then(response=>response.data)\n}\n\nexport const GetProfile =(id)=>{\n  return instance.get(`profile/` + id)\n}\n\nexport const Auth =()=>{\n  return instance.get(`auth/me`)\n}\n\nexport const GetStatus =(id)=>{\n  return instance.get(`profile/status/ `+id)\n}\n\nexport const UpdateStatus =(status)=>{\n  return instance.put(`profile/status`,{\n    status:status\n  })\n}\n\nexport const Login =(email, password, rememberMe, captcha=null)=>{\n  return instance.post(`auth/login`,{\n    email:email,\n    password:password,\n    rememberMe:false,\n    captcha:captcha\n  })\n}\n\nexport const Logout =()=>{\n  return instance.delete(`auth/login`)\n}\n\nexport const savePhotoApi=(photoFile)=>{\n  const formData=new FormData()\n  formData.append('image', photoFile)\n  return instance.put(`profile/photo`,formData, {\n    headers:{\n      'Content-Type':'multipart/form-data'\n    }\n  })\n}\nexport const SaveProfileApi =(profile)=>{\n  return instance.put(`profile`,profile)\n}\n\nexport const SecurityApi =()=>{\n  return instance.get(`security/get-captcha-url`)\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.776b9bd2.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.07f42c61.gif\";","import React from 'react';\nimport preloader from '../../../img/preloader.gif'\n\nlet Preloader = (props) => {\n  return <div className='preloader'>\n          <img src={preloader} alt='Wait :)'/>\n        </div>\n}\n\nexport default Preloader\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialData = {\n  dataBestFriends:[\n    {name:'Adolf', avasrc:'ava.jpg'},\n    {name:'Max', avasrc:'ava.jpg'},\n    {name:'Roma', avasrc:'ava.jpg'},\n    {name:'Adolf', avasrc:'ava.jpg'},\n    {name:'Max', avasrc:'ava.jpg'},\n    {name:'Roma', avasrc:'ava.jpg'}\n  ]\n};\n// начальные данные чтобы редакс мог запустить и отрендерить начальное состояние\n\nexport const navbarReducer=(state=initialData,action)=> {\n\n  return state;\n}\n\nexport default navbarReducer;\n","import {GetUsers,FollowUser,UnFollowUser} from '../api/api'\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET-USERS'\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\nconst SET_TOTAL_USERS_COUNT ='SET-TOTAL-USERS-COUNT'\nconst TOGGLE_IS_FETCHING ='TOGGLE-IS-FETCHING'\nconst FOLLOWING_IN_PROCCES = 'FOLLOWING-IN-PROCCES'\n\nlet initialState = {\n  dataUsers:[],\n  pageSize: 10,\n  totalUsersCount:0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProcces: []\n};\n\nconst usersReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        dataUsers: state.dataUsers.map(u=>{\n          if (u.id === action.userId){\n            return{...u, followed:true}\n          }\n          return u;\n        })\n      }\n    case UNFOLLOW:\n      return {\n        ...state,\n        dataUsers: state.dataUsers.map(u=>{\n          if (u.id === action.userId){\n            return{...u, followed:false}\n          }\n          return u;\n        })\n      }\n    case SET_USERS:{\n      return{...state, dataUsers:action.users}\n    }// в users мы закидываем данные пришедшие из action\n    case SET_CURRENT_PAGE:{\n      return{...state, currentPage: action.currentPage}\n    }\n    case SET_TOTAL_USERS_COUNT:{\n      return{...state, totalUsersCount: action.totalCount}\n    }\n    case TOGGLE_IS_FETCHING:{\n      return{...state, isFetching: action.isFetching}\n    }\n    case FOLLOWING_IN_PROCCES:{\n      return{...state,\n        followingInProcces: action.isFetching\n          ?[...state.followingInProcces, action.id]\n          :state.followingInProcces.filter(id=>id!==action.id)\n        }\n    }\n    default:\n      return state;\n  }\n}\n\nexport const Follow = (userId) => {\n  return {type: FOLLOW,userId: userId}\n}\nexport const UnFollow = (userId) => {\n  return {type: UNFOLLOW, userId: userId}\n}\nexport const SetUsers = (users) => {\n  return {type: SET_USERS, users: users}\n}\nexport const SetCurrentPage = (currentPage) => {\n  return {type: SET_CURRENT_PAGE, currentPage: currentPage}\n}\nexport const SetTotalUsersCount = (totalCount) => {\n  return {type: SET_TOTAL_USERS_COUNT, totalCount: totalCount}\n}\nexport const ToggleIsFetching = (isFetching) => {\n  return {type: TOGGLE_IS_FETCHING, isFetching: isFetching}\n}\nexport const FollowingInProcces = (isFetching,id) => {\n  return {type: FOLLOWING_IN_PROCCES, isFetching,id}\n}\n\nexport const GetUsersThunkCreator = (currentPage,pageSize)=>{\n\n  return (dispatch)=>{\n\n    dispatch(ToggleIsFetching(true))\n\n    GetUsers(currentPage,pageSize).then(response=>{\n        dispatch(ToggleIsFetching(false))\n        dispatch(SetUsers(response.items))\n        dispatch(SetCurrentPage(currentPage))\n        dispatch(SetTotalUsersCount(response.totalCount))\n      })\n    }\n}\n\nexport const FollowThunkCreator = (id)=>{\n\n  return (dispatch)=>{\n\n    dispatch(FollowingInProcces(true,id))\n    FollowUser(id).then(response=>{\n        if (response.resultCode===0){\n            dispatch(Follow(id))\n        }\n        dispatch(FollowingInProcces(false,id))\n    })\n  }\n}\n\nexport const UnFollowThunkCreator = (id)=>{\n\n  return (dispatch)=>{\n\n    dispatch(FollowingInProcces(true,id))\n    UnFollowUser(id).then(response=>{\n        if (response.resultCode===0){\n            dispatch(UnFollow(id))\n        }\n        dispatch(FollowingInProcces(false,id))\n    })\n  }\n}\n\nexport default usersReducer;\n","import {Auth,Login,Logout,SecurityApi} from '../api/api'\nimport {stopSubmit} from 'redux-form'\n\n\nconst SET_USER_DATA = 'SET-USER-DATA'\nconst GET_CAPTCHA_URL = 'GET-CAPTCHA-URL'\n\n\nlet initialState = {\n  id: null,\n  login: null,\n  email: null,\n  isAuth: false,\n  captchaUrl: null\n}\n\n\nconst authReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.data,\n        isAuth: true\n      // данные пришедшие из action с сервера\n      //  перезатрут данные из state\n      }\n    case GET_CAPTCHA_URL:\n      return{\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport const SetUserData = (data) => {\n  return {\n    type: SET_USER_DATA,\n    data: data\n  }\n}\nexport const SetCaptcha = (captchaUrl) => {\n  return {\n    type: GET_CAPTCHA_URL,\n    payload: {captchaUrl}\n  }\n}\n\nexport const GetUserData = () => async (dispatch) => {\n  let response = await Auth()\n        if(response.data.resultCode ===0){\n          dispatch(SetUserData(response.data.data))\n        }\n}\n// можно использовать await\n// можно then\n// так-то пофиг, но как варик\n\nexport const LoginHOC = (email, password, rememberMe, captcha) => (dispatch) => {\n  Login(email, password, rememberMe, captcha).then(response=>{\n        if(response.data.resultCode ===0){\n          dispatch(GetUserData())\n        } else if (response.data.resultCode ===10){\n          dispatch(GetCaptchaURL())\n        } else {\n          let message = response.data.messages.length>0 ? response.data.messages[0] :'Something is wrong'\n          let action = stopSubmit('login',{_error:message})\n          dispatch(action)\n        }\n  });\n}\n// stopSubmit это функия из redux-form\n// которая помогает обробатывать ошибки\n// должны передать в него название формы\n// которую должны остановить\n\nexport const GetCaptchaURL = () => (dispatch) => {\n  SecurityApi().then(response=>{\n    const captchaUrl = response.data.url\n    dispatch(SetCaptcha(captchaUrl))\n  });\n}\n\n\nexport const LogoutHOC = () => (dispatch) => {\n  Logout().then(response=>{\n        if(response.data.resultCode ===0){\n          dispatch(SetUserData(null))\n          window.location.reload()\n        }\n  });\n}\n\n\nexport default authReducer;\n","import {GetUserData} from '../redux/auth-reducer'\n\n\n\nconst SET_INITIALIZED = 'SET-INITIALIZED'\n\nlet initialState = {\n  initialized:false\n}\n\n\nconst appReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case SET_INITIALIZED:\n      return {\n        ...state,\n        initialized: true\n      }\n    default:\n      return state;\n  }\n}\n\nexport const InitializedSuccess = () => {\n  return {\n    type: SET_INITIALIZED\n  }\n}\n\nexport const InitializeApp = () => (dispatch) => {\n  // dispatch(GetUserData())\n  let promise = dispatch(GetUserData())\n  // Дожидаемся ответа от функции\n  // потому что в GetUserData написали ретурн\n  promise.then(()=>{\n    dispatch(InitializedSuccess())\n  })\n}\n\n\n\nexport default appReducer;\n","import {GetFriends} from '../api/api'\nimport {ToggleIsFetching} from './users-reducer'\n\nconst SET_FRIENDS = 'SET-FRIENDS'\n\nlet initialState = {\n  dataUsers:[],\n  isFetching: false\n};\n\nconst friendsReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case SET_FRIENDS:{\n      return {...state,dataUsers:action.users}\n    }\n    default:\n      return state;\n  }\n}\n\nexport const SetFriends = (users) => {\n  return {type: SET_FRIENDS,users: users}\n}\n\nexport const GetFriendsThunkCreator = ()=>{\n\n  return (dispatch)=>{\n    dispatch(ToggleIsFetching(true))\n    GetFriends().then(response=>{\n      dispatch(ToggleIsFetching(false))\n      dispatch(SetFriends(response.items))\n      // debugger\n    })\n  }\n}\n\n\nexport default friendsReducer;\n","import {combineReducers,createStore,applyMiddleware} from 'redux'\nimport profileReducer from './profile-reducer'\nimport messageReducer from './message-reducer'\nimport navbarReducer from './navbar-reducer'\nimport usersReducer from './users-reducer'\nimport authReducer from './auth-reducer'\nimport appReducer from './app-reducer'\nimport friendsReducer from './friends-reducer'\nimport thunkMiddleware from 'redux-thunk'\nimport {reducer as formReducer} from 'redux-form'\n\nlet reducers = combineReducers({\n  Profile:profileReducer,\n  Message:messageReducer,\n  Friends:friendsReducer,\n  Users:usersReducer,\n  Navbar:navbarReducer,\n  Auth:authReducer,\n  App:appReducer,\n  form:formReducer\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom'\nimport '../.././App.css';\nimport Logo from '../../img/logo.png'\n\nconst Header = (props) => {\n\n  return (\n    <header className='header'>\n      <img src={Logo} alt=\"Logo\" className='header__logo'></img>\n\n      <div className='header__auth'>\n        {props.isAuth\n          ?<div><p>{props.login}</p><button onClick={props.LogoutHOC}>LogOut</button></div>\n          :<NavLink to='/login'>LogIn</NavLink>}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from './Header'\nimport {connect} from 'react-redux';\nimport {LogoutHOC} from '../../redux/auth-reducer'\n\n\nclass HeaderContainer extends React.Component{\n\n\n\n  render(){\n    return <Header {...this.props}/>\n  }\n}\n\nlet mapStateToProps=(state)=>({\n    isAuth: state.Auth.isAuth,\n    login: state.Auth.login\n})\n// тут мы пишем какие данные нам нужны из стейта\n\nexport default connect(mapStateToProps,{LogoutHOC})(HeaderContainer)\n","import React from 'react';\nimport '../.././App.css';\n// import BestFriends from './BestFriends'\nimport {NavLink} from 'react-router-dom'\n\nconst Nav = (props) => {\n\n  // let state = props.store.getState();\n// пометка когда исправить в app.js\n\n  // такс бля, мы прокидываем store\n  // но там только функции, нет данных,\n  // но там есть функция которая даёт нам\n  // подтянуть данные, именно она сверху\n\n\n  // let dataRenderBestFriends =\n  //   state.Navbar.dataBestFriends.map( el => <BestFriends name={el.name} avasrc={el.avasrc}/>)\n// пометка когда исправить в app.js\n  return (\n    <nav className='nav'>\n      <NavLink to='/friends' className='nav__friends'>Friends</NavLink>\n\n      <NavLink to='/profile'>Profile</NavLink>\n      <NavLink to='/users'>Users</NavLink>\n      <NavLink to='/dialogs'>Messages</NavLink>\n      <NavLink to='/news'>News</NavLink>\n      <NavLink to='/music'>Music</NavLink>\n      <NavLink to='/settings'>Settings</NavLink>\n    </nav>\n  );\n}\n\n// <div className='nav__bestfriend'>\n//   {dataRenderBestFriends}\n//   </div>\n// пометка когда исправить в app.js\n// вернуть потом в пустое место между навлинками\n\nexport default Nav;\n","import React from 'react';\nimport '../.././App.css';\nimport {NavLink} from 'react-router-dom'\nimport Ava from '../../img/ava.jpg'\n\nlet Users = (props) =>{\n  let pagesCount = Math.ceil(props.totalUsersCount/props.pageSize);\n  let pages = [];\n  for (let i=1; i<=pagesCount;i++){\n    pages.push(i)\n  }\n\n  return(\n    <div className='users'>\n      <div className='users__page'>\n        {pages.map(el=>{\n          return <span className={props.currentPage === el && 'users__page-current'}\n          onClick={()=>{props.onPageChanged(el)}}>{el} </span>\n        })}\n      </div>\n      {props.dataUsers.map(elem=><div className='user__item' key={elem.id}>\n      <div className='user__item-face'>\n        <NavLink to={'/profile/'+elem.id}>\n          <img src={elem.photos.small!=null ? elem.photos.small:Ava} alt=\"ava\" className='user__ava'/>\n        </NavLink>\n        {elem.followed\n          ?<button disabled={props.followingInProcces.some(id=>id===elem.id)} className='user__follow'\n            onClick={()=>{props.UnFollowThunkCreator(elem.id)}}>\n              Unfollow</button>\n\n          :<button disabled={props.followingInProcces.some(id=>id===elem.id)} className='user__follow'\n            onClick={()=>{props.FollowThunkCreator(elem.id)}}>\n              Follow</button>}\n      </div>\n        <div className='user__info'>\n          <div className='user__info-name'>{elem.name}</div>\n          <div className='user__info-status'>Прикольненько</div>\n          <div className='user__info-from'>Msk<br></br>RU</div>\n        </div>\n      </div>)}\n      <button className='users-more'>Show more</button>\n    </div>\n  )\n}\n\n\n\nexport default Users;\n","import {createSelector} from 'reselect'\n\nexport const getUsers =(state)=>{\n  return state.Users.dataUsers\n}\n\nexport const pageSize =(state)=>{\n  return state.Users.pageSize\n}\n\n// export const dataUsersSelector = (state)=>{\n//   return dataUsers(state).filter(u=>true)\n// }\n\nexport const dataUsersSuperSelector = createSelector(getUsers,pageSize,\n  (dataUsers, pageSize)=>{\n    return dataUsers.filter(u=>true)\n})\n// эта функция создана с бибилиотекой реселектом для того чтобы\n// не запускать сложную логику которая может лежать в этих функциях\n// она будет запускаться только после определения\n// есть ли разница в требуемом от неё ответе\n// данные для сравнения она берёт из более простого селекора\n// dataUser\n// вообщем она вызывается только если входные данные меняются\n// если не меняются следовательно ответ функции тоже не будет меняться\n// выпуск 83\n// селектор может зависить от многих селекторов\n// getUsers,pageSize, описание от чего зависит большой селетор\n","import React from 'react';\nimport {Follow,UnFollow,SetCurrentPage,FollowingInProcces,GetUsersThunkCreator,UnFollowThunkCreator,FollowThunkCreator} from '../.././redux/users-reducer'\nimport {connect} from 'react-redux';\nimport Users from './Users'\nimport Preloader from '../common/preloader/Preloader'\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect'\nimport {compose} from 'redux'\nimport {getUsers,pageSize} from '../../redux/selectors'\n\n\nclass UsersContainer extends React.Component{\n\n  componentDidMount() {\n    this.props.GetUsersThunkCreator(this.props.currentPage,this.props.pageSize)\n  }\n  onPageChanged=(pageNumber)=>{\n    this.props.GetUsersThunkCreator(pageNumber,this.props.pageSize)\n  }\n\n  render() {\n    return <>\n      {this.props.isFetching?\n        <Preloader/>\n        :null}\n      <Users\n        totalUsersCount={this.props.totalUsersCount}\n        pageSize={this.props.pageSize}\n        currentPage={this.props.currentPage}\n        dataUsers={this.props.dataUsers}\n        onPageChanged={this.onPageChanged}\n        UnFollow={this.props.UnFollow}\n        Follow={this.props.Follow}\n        followingInProcces={this.props.followingInProcces}\n        UnFollowThunkCreator={this.props.UnFollowThunkCreator}\n        FollowThunkCreator={this.props.FollowThunkCreator}\n      />\n    </>\n  }\n}\n\nlet mapStateToProps =(state)=>{\n  return {\n    dataUsers: getUsers(state),\n    pageSize: pageSize(state),\n    totalUsersCount: state.Users.totalUsersCount,\n    currentPage:state.Users.currentPage,\n    isFetching:state.Users.isFetching,\n    followingInProcces:state.Users.followingInProcces\n  }\n}\n// можно настроить селокторы для каждого пропса\n// но нах это нужно не знаю\n// он говорит нужно, для примера 2 сделал\n\n// сюда можно воткнуть dataUsersSuperSelector(state)\n// и передать туда что-то\n// она не будет постояно вызываться и грузить процессор\n// а зупуститься только когда нужно\n\nexport default compose(\n  connect(mapStateToProps,\n    {Follow, UnFollow, SetCurrentPage,\n      FollowingInProcces, GetUsersThunkCreator,\n      UnFollowThunkCreator,FollowThunkCreator}),\n  WithAuthRedirect\n)(UsersContainer)\n","import React from 'react';\nimport '../.././App.css';\nimport {reduxForm,Field} from 'redux-form'\nimport {Input} from '../common/formsControler/FormsControler'\nimport {requiredField} from '../../utilits/validators/validators'\nimport {connect} from 'react-redux'\nimport {LoginHOC} from '../../redux/auth-reducer'\nimport {Redirect} from 'react-router-dom'\n\nconst LoginForm = (props) => {\n  return (\n      <form onSubmit={props.handleSubmit}>\n\n      {props.captchaUrl && <img src={props.captchaUrl}/>}\n      {props.captchaUrl && <Field placeholder=''\n                            name='captcha'\n                            component={Input}\n                            validate={[requiredField]}\n                            />}\n\n        <div>\n          <Field placeholder='Email'\n            name='email'\n            component={Input}\n            validate={[requiredField]}\n          />\n        </div>\n        <div>\n          <Field placeholder='Password'\n            name='password'\n            component={Input}\n            validate={[requiredField]}\n          />\n        </div>\n        <div>\n          <Field component={Input}\n            name='rememberMe'\n            type='checkbox'\n            // validate={[requiredField]}\n          /> remember me\n        </div>\n\n        {props.error && <div className='form-login-error'>{props.error}</div>}\n\n        <div>\n          <button>LogIn</button>\n        </div>\n      </form>\n  )\n}\n// {props.error && <div className='form-login-error'>{props.error}</div>}\n// это значит если в пропсах прихлдит ерор\n// покажи этот див\n\n\nconst ReduxLoginForm = reduxForm({\n  form:'login'\n})(LoginForm)\n// это название формы\n// оно нужно будет для stopSubmit\n\nconst Login =(props)=>{\n\n  const onSubmit=(formData)=>{\n    props.LoginHOC(formData.email,formData.password,formData.rememberMe,formData.captcha)\n  }\n\n  if (props.isAuth) {\n    return <Redirect to='/profile'/>\n  }\n\n  return(\n    <div>\n      <h1>LogIn</h1>\n      <ReduxLoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n  )\n}\n\nconst mapStateToProps=(state)=>({\n  isAuth: state.Auth.isAuth,\n  captchaUrl: state.Auth.captchaUrl\n})\n\nexport default connect(mapStateToProps,{LoginHOC})(Login)\n","import React, { Suspense } from 'react';\nimport Preloader from '../components/common/preloader/Preloader'\n\nconst SuspenseHOC = (Component) =>{\n  return (props)=>{\n    return (<Suspense fallback={<Preloader/>}>\n        <Component {...props} />\n      </Suspense>\n    )\n  }\n}\n\nexport default SuspenseHOC\n","import React, { useState, useEffect } from 'react';\nimport '../.././App.css';\nimport Ava from '../../img/ava.jpg'\nimport {NavLink} from 'react-router-dom'\n\nlet Friends = (props) =>{\n  // debugger\n\n  let onClick = function(el){\n      props.UnFollowThunkCreator(el)\n      props.onPageChanged()\n   }\n\n\n  return(\n    <div className='friends'>\n    friends number: {props.dataUsers.length}\n    {props.dataUsers.map(el=>{\n      if (el.followed == true){\n        return(\n          <div className='friend'>\n          <NavLink to={'/profile/'+el.id}>\n            <img src={el.photos.small!=null ? el.photos.small:Ava} alt=\"ava\" className='user__ava'/>\n          </NavLink>\n          <p>{el.name}</p>\n          <button\n            className='user__follow'\n            onClick={()=>onClick(el.id)}>\n              Unfollow</button>\n          </div>\n        )\n      }\n    })}\n\n    </div>\n  )\n}\n\nexport default Friends;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport Friends from './Friends'\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect'\nimport {compose} from 'redux'\nimport Preloader from '../common/preloader/Preloader'\nimport {getUsers} from '../../redux/selectors'\nimport {GetFriendsThunkCreator} from '../../redux/friends-reducer'\nimport {UnFollowThunkCreator} from '../../redux/users-reducer'\n\nclass FriendsContainer extends React.Component{\n\n  componentDidMount() {\n    this.props.GetFriendsThunkCreator()\n  }\n\n  onPageChanged=()=>{\n    this.props.GetFriendsThunkCreator()\n  }\n\n\n\n  render() {\n    return <>\n      {this.props.isFetching?\n        <Preloader/>\n        :null}\n      <Friends\n        dataUsers={this.props.dataUsers}\n        UnFollowThunkCreator={this.props.UnFollowThunkCreator}\n        GetFriendsThunkCreator={this.props.GetFriendsThunkCreator}\n        onPageChanged={this.onPageChanged}\n      />\n    </>\n  }\n}\n\nlet mapStateToProps =(state)=>{\n  return {\n    dataUsers: state.Friends.dataUsers,\n    isFetching:state.Friends.isFetching\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps,\n    {GetFriendsThunkCreator,UnFollowThunkCreator}),\n  WithAuthRedirect\n)(FriendsContainer)\n","import React from 'react';\nimport {Switch} from 'react-router-dom'\nimport './App.css';\nimport HeaderContainer from './components/header/Header-Container'\nimport Nav from './components/Nav/Nav'\nimport UsersContainer from './components/users/Users-Container'\nimport {HashRouter, Route} from 'react-router-dom'\nimport Login from './components/login/login'\nimport {InitializeApp} from './redux/app-reducer'\nimport {connect} from 'react-redux';\nimport Preloader from './components/common/preloader/Preloader'\nimport SuspenseHOC from './hoc/WithSuspense'\nimport FriendsContainer from './components/friends/Friends-Container'\n\nconst CurrentDialogContainer = React.lazy(() => import('./components/dialogs/message/CurrentDialog-Container'));\nconst ProfileContainer = React.lazy(() => import('./components/profile/Profile-Container'));\n\nclass App extends React.Component {\n\n  catchAllErrors =(promiseRejectionEvent)=>{\n    alert(promiseRejectionEvent)\n  }\n\n  componentDidMount(){\n    this.props.InitializeApp()\n    window.addEventListener('unhandledrejection', this.catchAllErrors)\n  }\n  componentWillUnmount(){\n    window.removeEventListener('unhandledrejection', this.catchAllErrors)\n  }\n\n  render(){\n\n    if(!this.props.initialized){\n      return <Preloader/>\n    }\n    return (\n      <HashRouter>\n        <div className='app-wrapper'>\n          <HeaderContainer/>\n          <Nav/>\n          <Switch>\n            <Route exact path='/'\n              render={SuspenseHOC(ProfileContainer)}\n            />\n            <Route path='/profile/:userId?'\n              render={SuspenseHOC(ProfileContainer)}\n            />\n            <Route path='/dialogs'\n              render={SuspenseHOC(CurrentDialogContainer)}\n            />\n            <Route path='/users'\n              render={ () => <UsersContainer/>}\n            />\n            <Route exact path='/login'\n              render={ () => <Login/>}\n            />\n            <Route exact path='/friends'\n              render={ () => <FriendsContainer/>}\n            />\n            <Route path='*'\n              render={ () => <div>404 ))))))))</div>}\n            />\n          </Switch>\n\n        </div>\n      </HashRouter>\n    );\n  }\n}\n// <Nav store={props.store}/>\n// чтобы отрисовывать вкладку друзей\n// потом нужно будет сделать контейнерную для нав\n\n\nlet mapStateToProps=(state)=>({\n    initialized:state.App.initialized\n})\n\n\nexport default connect(mapStateToProps,{InitializeApp})(App)\n\n// export default compose(\n//   connect(mapStateToProps,{GetUserData}),\n//   withRouter\n// )(App)\n\n// он добавлял withRouter в 80 выпуске\n// хз зачем, у меня и без него работало\n","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport {Provider} from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App store={store}/>\n    </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import React from 'react';\nimport '../../../App.css';\n\nexport const Textarea = ({input,meta,...props}) =>{\n//мы деструктеризируем пропсы чтобы передать\n// то что нужно для работы тексэрии\n// деструктуризация и рестоператор-эти темы\nconst hasError = meta.touched&&meta.error\n\n  return (\n    <div className={(hasError?'form-error':'')}>\n      <textarea {...input} {...props}/>\n      {hasError&&<p className='form-control-text'>{meta.error}</p>}\n    </div>\n  )\n}\n// если мы из мета пришли данные что\n// мы ронули форму и\n// если в мета пришол ерор из валидатора\n// покажи спан и присвой класс\n\n\nexport const Input = ({input,meta,...props}) =>{\n\nconst hasError = meta.touched&&meta.error\n\n  return (\n    <div className={(hasError?'form-error':'')}>\n      <input {...input} {...props}/>\n      {hasError&&<p className='form-control-text'>{meta.error}</p>}\n    </div>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/ava.bbb874fe.jpg\";","import {Redirect} from 'react-router-dom'\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nlet mapStateToPropsForRedirect=(state)=>{\n  return{\n    isAuth:state.Auth.isAuth\n  }\n}\n\nexport const WithAuthRedirect=(Component)=>{\n  class RedirectComponent extends React.Component {\n    render(){\n      if (!this.props.isAuth){\n        return <Redirect to='/login'/>\n      }\n      return <Component {...this.props} />\n    }\n  }\n\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n\n  return ConnectedAuthRedirectComponent\n}\n","export const requiredField = value =>{\n  if (value) return undefined\n  return 'Field is required'\n}\n\nexport const maxLenghtCreator = (maxLenght) => value =>{\n  // if (value) return undefined\n  if (value.length>maxLenght) return 'To many words'\n  return undefined\n}\n","import {GetProfile,GetStatus,UpdateStatus,savePhotoApi,SaveProfileApi} from '../api/api'\nimport {stopSubmit} from 'redux-form'\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\nconst SET_STATUS = 'SET-STATUS'\nconst SET_PHOTO_SUCCESS = 'SET-PHOTO-SUCCESS'\nconst SET_USER_PROFILE_INFO = 'SET-USER-PROFILE-INFO'\n// const UPDATE_STATUS ='UPDATE-STATUS'\n//\nconst SET_USER_ID = 'SET-USER-ID'\n//\nlet initialState = {\n  dataPostOld:[\n    {id:1, message:'Maxim'},\n    {id:2, message:'Stas'},\n    {id:3, message:'Kirill'},\n    {id:4, message:'Vanya'},\n    {id:5, message:'Scot'},\n    {id:6, message:'Tom'}\n  ],\n  profile: null,\n  profileUpdateStatus: null,\n  status: '',\n  // id: 2\n};\n// начальные данные чтобы редакс мог запустить и отрендерить начальное состояние\n\nconst profileReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case ADD_POST:\n      let NewOldPost = {\n        id: 5,\n        message: action.MyPostText,\n      };\n      return {\n        ...state,\n        dataPostOld: [...state.dataPostOld,NewOldPost],\n        dataNewPostText:''\n      }\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile\n      }\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status\n      }\n    case SET_USER_PROFILE_INFO:\n      return {\n        ...state,\n        profile: {...state.profile,\n          aboutMe:action.profile.aboutMe,\n          lookingForAJob:action.profile.lookingForAJob,\n          lookingForAJobDescription:action.profile.lookingForAJobDescription,\n          fullName:action.profile.fullName,}\n      }\n    // case UPDATE_STATUS:\n    //   return {\n    //     ...state,\n    //     status: action.status\n    //   }\n    //\n    case SET_USER_ID:\n      return {\n        ...state,\n        id: action.id\n      }\n    case SET_PHOTO_SUCCESS:\n      return {\n        ...state,\n        profile: {...state.profile, photos:action.photos}\n      }\n      // debugger\n    //\n    default:\n      return state;\n  }\n}\n\nexport const AddPost = (MyPostText) => {\n  return {\n    type: ADD_POST,\n    MyPostText:MyPostText\n  }\n}\n\nexport const SetUsersProfile = (profile) => {\n  return { type:SET_USER_PROFILE, profile: profile }\n}\nexport const SetStatus = (status) => {\n  return { type:SET_STATUS, status: status }\n}\nexport const SetPhotoSuccess = (photos) => {\n  return { type:SET_PHOTO_SUCCESS, photos: photos }\n}\nexport const SetUsersProfileInfo = (profile) => {\n  return { type:SET_USER_PROFILE_INFO, profile: profile }\n}\n// export const UpdateStatus = (status) => {\n//   return { type:UPDATE_STATUS, status: status }\n// }\n\nexport const GetUserStatus = (id) => async (dispatch)=> {\n  let response = await GetStatus(id)\n      dispatch(SetStatus(response.data))\n}\nexport const UpdateUserStatus = (status) =>(dispatch)=> {\n  UpdateStatus(status).then(response=>{\n    if(response.data.resultCode===0){\n      dispatch(SetStatus(status))\n    }\n  });\n}\n\nexport const savePhoto = (file) =>(dispatch)=> {\n  savePhotoApi(file).then(response=>{\n    if(response.data.resultCode===0){\n      dispatch(SetPhotoSuccess(response.data.data.photos))\n    }\n  });\n}\nexport const GetUsersProfile = (id) =>(dispatch)=> {\n  GetProfile(id).then(response=>{\n      dispatch(SetUsersProfile(response.data))\n  });\n}\n\n\n\nexport const SaveProfile = (profile) => (dispatch,getState) => {\n  const id = getState().Auth.id\n  const profileUpdateStatus = getState().Profile.profileUpdateStatus\n  SaveProfileApi(profile).then(response=>{\n    if(response.data.resultCode===0){\n       dispatch(GetUsersProfile(id))\n       // profileUpdateStatus = true\n    } else {\n      let action = stopSubmit('info',{_error:response.data.messages[0]})\n      dispatch(action)\n      // profileUpdateStatus = false\n    }\n  });\n}\n\n\n// не юзаная ((((\nexport const SetUsersId = (id) => {\n  return { type:SET_USER_ID, id: id }\n}\n//\n\nexport default profileReducer;\n"],"sourceRoot":""}