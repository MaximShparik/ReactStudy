{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/profile/ProfileStatusHook.jsx","components/profile/ProfileInfoDataForm.jsx","components/profile/ProfileInfo.jsx","components/profile/PostOld.jsx","components/profile/Posts.jsx","components/profile/Posts-Container.jsx","components/profile/Profile.jsx","components/profile/Profile-Container.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusHook","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","onDoubleClick","onChange","e","currentTarget","onBlur","UpdateUserStatus","autoFocus","maxlength","ReduxProfileInfoDataForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Input","validate","requiredField","type","Textarea","keys","profile","contacts","map","key","error","ProfileInfoData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","isOwner","onClick","goToEditMode","Contacts","ProfileInfo","setProfile","Preloader","src","photos","large","Ava","alt","savePhoto","target","files","initialValues","formData","SaveProfile","PostOld","photo","small","message","maxLenght10","maxLenghtCreator","ReduxPostsForm","rows","Posts","dataRenderPostOld","dataPostOld","el","id","values","AddPost","MyPostText","PostsContainer","connect","state","dataNewPostText","Profile","dispatch","profileUpdateStatus","ProfileContainer","this","match","params","userId","authorisedId","GetUsersProfile","GetUserStatus","prevProps","prevState","snapshot","React","Component","compose","Auth","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/4.a2c44dcd.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React,{useState,useEffect} from 'react';\nimport '../.././App.css';\n\nconst ProfileStatusHook =(props)=> {\n\n  let [editMode,setEditMode] = useState(false)\n  // урок 84, useState возвращает массив из знвчения и функции\n  // мы присваеваем editMode значение\n  // а setEditMode функцию которая меняет первое значение\n  let [status,setStatus] = useState(props.status)\n\n  useEffect(()=>{\n    setStatus(props.status)\n  },[props.status])\n  // useEffect этот хук запускается когда компонента уже вмонтирована\n  // и он зависит от того что указанно вторым элементом\n  // это нужно чтобы отрисовка не сбоила\n\n\n  const activateEditMode=()=>{\n    setEditMode(true)\n  }\n\n  const deactivateEditMode=()=>{\n    setEditMode(false)\n    props.UpdateUserStatus(status)\n  }\n\n  const onStatusChange=(e)=>{\n    setStatus(e.currentTarget.value)\n  }\n\n  return (\n      <div className='status'>\n        {!editMode&&\n\n            <span onDoubleClick={activateEditMode}>{props.status||'---'}</span>\n\n        }\n        {editMode&&\n\n            <input onChange={onStatusChange}\n              onBlur={deactivateEditMode}\n              autoFocus={true}\n              value={status}\n              maxlength=\"100\"\n              className='status-input'>\n              </input>\n\n        }\n      </div>\n  )\n}\n\nexport default ProfileStatusHook;\n","import React from 'react';\nimport Contacts from './ProfileInfo'\nimport {reduxForm,Field} from 'redux-form'\nimport {Input,Textarea} from '../common/formsControler/FormsControler'\nimport {requiredField} from '../../utilits/validators/validators'\n\nconst ProfileInfoDataForm =(props)=>{\n\n  return(\n    <form onSubmit={props.handleSubmit} className='about-me'>\n\n      <p className='info-name-form'>Назови себя:\n        <Field placeholder='Name'\n          name='fullName'\n          component={Input}\n          validate={[requiredField]}\n        />\n      </p>\n\n      <p className='looking'>Ищу ли я работу:\n        <Field component={Input}\n          name='lookingForAJob'\n          type='checkbox'/>\n      </p>\n\n      <p>Твои професионнальный навыки:\n        <Field placeholder='Your skills'\n          name='lookingForAJobDescription'\n          component={Textarea}\n        />\n      </p>\n\n      <p>Расскажи о себе:\n        <Field placeholder='What do you think about yourself'\n          name='aboutMe'\n          component={Textarea}\n        />\n      </p>\n      <p className='contacts'>{Object.keys(props.profile.contacts).map(key=>{\n        return <div key={key} className='contact__item'>\n        <p>{key}:<Field component={Input}\n          name={'contacts.'+key}/></p>\n        </div>\n      })}</p>\n\n      {props.error && <div className='form-login-error'>{props.error}</div>}\n\n      <button>Save</button>\n    </form>\n  )\n}\n\n\n\nconst ReduxProfileInfoDataForm = reduxForm({\n  form:'info'\n})(ProfileInfoDataForm)\n\nexport default ReduxProfileInfoDataForm;\n","import React,{useState,useEffect} from 'react';\nimport '../.././App.css';\nimport Preloader from '../common/preloader/Preloader'\nimport ProfileStatusHook from './ProfileStatusHook'\nimport Ava from '../../img/ava.jpg'\nimport ProfileInfoDataForm from './ProfileInfoDataForm'\n\n\nconst ProfileInfo = (props) => {\n\n  let [editMode,setEditMode] = useState(false)\n  // урок 84, useState возвращает массив из знвчения и функции\n  // мы присваеваем editMode значение\n  // а setEditMode функцию которая меняет первое значение\n  let [profile,setProfile] = useState(props.status)\n\n  useEffect(()=>{\n    setProfile(props.profile)\n  },[props.profile])\n\n  const activateEditMode=()=>{\n    setEditMode(true)\n  }\n\n  const deactivateEditMode=()=>{\n    setEditMode(false)\n  }\n\n  // если профайл undefined или null\n  if (!props.profile){\n    return <Preloader/>\n  }\n  const onMainPhotoSelected=(e)=>{\n    props.savePhoto(e.target.files[0])\n  }\n\n  const onSubmit= (formData)=>{\n    props.SaveProfile(formData)\n    setEditMode(false)\n  }\n\n  return (\n    <div>\n      <div className='content__bg'></div>\n      <div className='content__profile'>\n      <div className='content__profile-main'>\n        <img src={props.profile.photos.large||Ava} alt=\"ava\" className='content__profile-ava'></img>\n        {props.isOwner&&<input type='file' onChange={onMainPhotoSelected}/>}\n        <ProfileStatusHook status={props.status}\n        UpdateUserStatus={props.UpdateUserStatus}/>\n      </div>\n    {editMode\n      ?<ProfileInfoDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\n      :<ProfileInfoData\n      profile={props.profile}\n      isOwner={props.isOwner}\n      goToEditMode={()=>{activateEditMode()}}\n      />}\n      </div>\n      </div>\n    )\n  }\n\n\n\n  const ProfileInfoData =(props)=>{\n    return(\n      <div className='content__profile-info'>\n      <p className='info-name'>{props.profile.fullName}</p>\n      <p>Looking for a job: {props.profile.lookingForAJob?'Yes':'No'}</p>\n      { props.profile.lookingForAJob &&\n        <p>My professional skills: {props.profile.lookingForAJobDescription}</p>\n      }\n      { props.profile.aboutMe &&\n        <p>About me: {props.profile.aboutMe}</p>\n      }\n      <p>{Object.keys(props.profile.contacts).map(key=>{\n        return <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\n      })}</p>\n      {props.isOwner&&<button onClick={props.goToEditMode}>Edit Info</button>}\n      </div>\n    )\n  }\n\n\n  // 24 минута 97 выпуск\n  // написали на кнопке сейф и я устал\n\n  export const Contacts = ({contactTitle, contactValue}) => {\n    return(\n      <div className='link'>\n      { contactValue &&\n        <p>{contactTitle}: {contactValue}</p>\n      }\n      </div>\n    )\n  }\n\n  export default ProfileInfo;\n","import React from 'react';\nimport '../.././App.css';\nimport Ava from '../../img/ava.jpg'\n\nconst PostOld = (props) => {\n  // debugger\n  if(props.photo==null||props.photo.photos.small==null){\n    var photo = Ava\n  } else{\n    var photo = props.photo.photos.small\n  }\n\n  return (\n      <div className='post__old'>\n        <img src={photo} alt=\"ava\" className='post__old-ava'></img>\n        <p className='post__old-title'>{props.message}</p>\n      </div>\n  );\n}\n\nexport default PostOld;\n","import React from 'react';\nimport '../.././App.css';\nimport PostOld from './PostOld';\nimport {reduxForm,Field} from 'redux-form'\nimport {requiredField,maxLenghtCreator} from '../../utilits/validators/validators'\nimport {Textarea} from '../common/formsControler/FormsControler'\n\nconst Posts = (props) => {\n  // debugger\n\n  let AddPost = (values) => {\n    props.AddPost(values.MyPostText);\n  }\n\n  let dataRenderPostOld =\n    props.dataPostOld.map( el => <PostOld photo={props.photo} message={el.message} id={el.id}/>)\n\n  return (\n    <div className='content__posts post'>\n      <div className='post__new'>\n        <p className='post__new-title'>Posts from my heart</p>\n        <ReduxPostsForm onSubmit={AddPost}/>\n      </div>\n      {dataRenderPostOld}\n    </div>\n  );\n}\n\nconst maxLenght10 = maxLenghtCreator(10)\n// тут мы закинули валидатор в новую функцию\n// чтобы он не крашил приложение\n// изза максимальной глубины.....\nconst PostsForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        className='post__new-main'\n        rows=\"2\"\n        placeholder=\"Your post...\"\n        name='MyPostText'\n        component={Textarea}\n        validate={[requiredField,maxLenght10]}\n        >\n      </Field>\n      <button className='post__new-button'>\n        Add\n      </button>\n    </form>\n  )\n}\n\nconst ReduxPostsForm = reduxForm({\n  form:'post'\n})(PostsForm)\n\nexport default Posts;\n","import Posts from './Posts'\nimport {AddPost} from '../.././redux/profile-reducer'\nimport {connect} from 'react-redux';\n\nlet mapStateToProps =(state)=>{\n  return {\n    dataNewPostText: state.Profile.dataNewPostText,\n    dataPostOld: state.Profile.dataPostOld\n  }\n}\n\nlet mapDispatchToProps = (dispatch)=>{\n  return{\n    AddPost:(MyPostText)=>{\n      dispatch(AddPost(MyPostText))\n    }\n  }\n}\n\n\nconst PostsContainer = connect(mapStateToProps,mapDispatchToProps)(Posts);\n\nexport default PostsContainer;\n","import React from 'react';\nimport ProfileInfo from './ProfileInfo'\nimport '../.././App.css';\nimport PostsContainer from './Posts-Container';\n\nconst Profile = (props) => {\n  // debugger\n  return (\n    <div className='content'>\n      <ProfileInfo profile={props.profile}\n        profileUpdateStatus={props.profileUpdateStatus}\n        status={props.status}\n        isOwner={props.isOwner}\n        UpdateUserStatus={props.UpdateUserStatus}\n        savePhoto={props.savePhoto}\n        SaveProfile={props.SaveProfile}/>\n      { props.isOwner &&\n        <PostsContainer photo={props.profile}/>\n      }\n\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport '../.././App.css';\nimport {connect} from 'react-redux';\nimport {GetUsersProfile,GetUserStatus,UpdateUserStatus,savePhoto,SaveProfile} from '../../redux/profile-reducer'\nimport {withRouter} from 'react-router-dom'\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect'\nimport {compose} from 'redux'\n\nclass ProfileContainer extends React.Component{\n\n  componentDidMount(){\n\n    let id = this.props.match.params.userId\n    if (!id){id=this.props.authorisedId}\n    this.props.GetUsersProfile(id)\n    this.props.GetUserStatus(id)\n\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.match.params.userId!==prevProps.match.params.userId){\n      let id = this.props.match.params.userId\n      if (!id){id=this.props.authorisedId}\n      this.props.GetUsersProfile(id)\n      this.props.GetUserStatus(id)\n    }\n  }\n\n  render(){\n\n    return (\n      <Profile {...this.props}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        UpdateUserStatus={this.props.UpdateUserStatus}\n        savePhoto={this.props.savePhoto}\n        SaveProfile={this.props.SaveProfile}/>\n    )\n  }\n}\n\nlet mapStateToProps=(state)=>{\n  return{\n    profile:state.Profile.profile,\n    status:state.Profile.status,\n    authorisedId: state.Auth.id,\n    isAuth:state.Auth.isAuth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps,{GetUsersProfile,GetUserStatus,UpdateUserStatus,savePhoto,SaveProfile}),\n  withRouter,\n  WithAuthRedirect\n)(ProfileContainer)\n\n// компосе автоатисеки вызовет первую снизу функцию\n// и передаст в неё ProfileContainer\n// затем результат первой снизу закинет во вторую снизу\n// и тд\n"],"sourceRoot":""}