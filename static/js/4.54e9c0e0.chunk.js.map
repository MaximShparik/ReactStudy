{"version":3,"sources":["components/dialogs/message/DialogsName.jsx","components/dialogs/message/Message.jsx","components/dialogs/message/CurrentDialog.jsx","components/dialogs/message/CurrentDialog-Container.jsx"],"names":["DialogsName","props","to","id","className","name","Message","class","src","avasrc","alt","from","text","maxLenght20","maxLenghtCreator","ReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","rows","placeholder","CurrentDialog","dataRenderMessage","dataMessage","map","el","dataRenderDialogsName","dataDialogsName","values","SendMessage","MyMessageText","compose","connect","state","dataNewMessageText","dispatch","WithAuthRedirect"],"mappings":"mJAWeA,EAPK,SAACC,GAEnB,OACE,kBAAC,IAAD,CAASC,GAAI,YAAYD,EAAME,GAAIC,UAAU,iBAAiBH,EAAMI,OCWzDC,EAfC,SAACL,GAEf,OACE,yBAAKG,UAAW,WAAYH,EAAMM,OAChC,yBAAKH,UAAU,mBACb,yBAAKI,IAAKP,EAAMQ,OAAQC,IAAI,MAAMN,UAAU,iBAC5C,0BAAMA,UAAU,iBAAiBH,EAAMU,OAEzC,yBAAKP,UAAU,iBACb,uBAAGA,UAAU,iBAAiBH,EAAMW,S,kCCoBtCC,EAAcC,YAAiB,IAsB/BC,EAAmBC,YAAU,CACjCC,KAAK,WADkBD,EApBL,SAACf,GAEnB,OACE,0BAAMG,UAAU,mBAAmBc,SAAUjB,EAAMkB,cACjD,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAcX,GACzBR,KAAK,gBACLD,UAAU,wBACVqB,KAAK,IACLC,YAAY,oBAGd,4BAAQtB,UAAU,2BAAlB,YAWSuB,EAlDO,SAAC1B,GAErB,IAAI2B,EACF3B,EAAM4B,YAAYC,KAAK,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAASnB,KAAMmB,EAAGnB,KAAMD,KAAMoB,EAAGpB,KAAMJ,MAAOwB,EAAGxB,MAAOE,OAAQsB,EAAGtB,YAC9FuB,EACF/B,EAAMgC,gBAAgBH,KAAK,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAa1B,KAAM0B,EAAG1B,KAAMF,GAAI4B,EAAG5B,QAMtE,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,oBACZwB,GAEH,yBAAKxB,UAAU,iBACZ4B,GAEH,kBAACjB,EAAD,CAAkBG,SAZF,SAACgB,GACnBjC,EAAMkC,YAAYD,EAAOE,oB,8BCMdC,sBACbC,aAjBmB,SAACC,GACpB,MAAO,CACLC,mBAAoBD,EAAMjC,QAAQkC,mBAClCX,YAAaU,EAAMjC,QAAQuB,YAC3BI,gBAAgBM,EAAMjC,QAAQ2B,oBAIT,SAACQ,GACxB,MAAM,CACJN,YAAY,SAACC,GACXK,EAASN,YAAYC,SAOzBM,IAFaL,CAGbV","file":"static/js/4.54e9c0e0.chunk.js","sourcesContent":["import React from 'react';\nimport '../../.././App.css';\nimport {NavLink} from 'react-router-dom'\n\nconst DialogsName = (props) => {\n\n  return (\n    <NavLink to={'/dialogs/'+props.id} className='dialogs__item'>{props.name}</NavLink>\n  );\n}\n\nexport default DialogsName;\n","import React from 'react';\nimport '../../.././App.css';\n\nconst Message = (props) => {\n\n  return (\n    <div className={'message '+ props.class}>\n      <div className='message__person'>\n        <img src={props.avasrc} alt=\"ava\" className='message__ava'/>\n        <span className='message__name'>{props.from}</span>\n      </div>\n      <div className='message__area'>\n        <p className='message__text'>{props.text}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport '../../.././App.css';\nimport DialogsName from './DialogsName'\nimport Message from './Message';\nimport {reduxForm,Field} from 'redux-form'\nimport {requiredField,maxLenghtCreator} from '../../../utilits/validators/validators'\nimport {Textarea} from '../../common/formsControler/FormsControler'\n\nconst CurrentDialog = (props) => {\n\n  let dataRenderMessage =\n    props.dataMessage.map( el => <Message text={el.text} from={el.from} class={el.class} avasrc={el.avasrc}/>)\n  let dataRenderDialogsName =\n    props.dataDialogsName.map( el => <DialogsName name={el.name} id={el.id}/>)\n\n  let AddNewMessage = (values) => {\n    props.SendMessage(values.MyMessageText);\n  }\n\n  return (\n    <div className='dialogs'>\n      <div className='dialogs__current'>\n        {dataRenderMessage}\n      </div>\n      <div className='dialogs__list'>\n        {dataRenderDialogsName}\n      </div>\n      <ReduxMessageForm onSubmit={AddNewMessage}/>\n    </div>\n  );\n}\n\nconst maxLenght20 = maxLenghtCreator(20)\n\nconst MessageForm = (props) => {\n\n  return (\n    <form className='dialogs__message' onSubmit={props.handleSubmit}>\n      <Field\n        component={Textarea}\n        validate={[requiredField,maxLenght20]}\n        name='MyMessageText'\n        className='dialogs__message-area'\n        rows=\"2\"\n        placeholder=\"Your message...\"\n        >\n      </Field>\n      <button className='dialogs__message-button'>\n        Send\n      </button>\n    </form>\n  )\n}\n\nconst ReduxMessageForm = reduxForm({\n  form:'message'\n})(MessageForm)\n\nexport default CurrentDialog;\n","import CurrentDialog from './CurrentDialog'\nimport {SendMessage} from '../../.././redux/message-reducer';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux'\nimport {WithAuthRedirect} from '../../../hoc/WithAuthRedirect'\n\nlet mapStateToProps =(state)=>{\n  return {\n    dataNewMessageText: state.Message.dataNewMessageText,\n    dataMessage: state.Message.dataMessage,\n    dataDialogsName:state.Message.dataDialogsName,\n  }\n}\n\nlet mapDispatchToProps = (dispatch)=>{\n  return{\n    SendMessage:(MyMessageText)=>{\n      dispatch(SendMessage(MyMessageText))\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps,mapDispatchToProps),\n  WithAuthRedirect\n)(CurrentDialog)\n\n// компосе автоатисеки вызовет первую снизу функцию\n// и передаст в неё карентдиалог\n// затем результат первой снизу закинет во вторую снизу\n"],"sourceRoot":""}