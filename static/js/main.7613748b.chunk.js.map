{"version":3,"sources":["img/preloader.gif","api/api.js","serviceWorker.js","redux/navbar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/header/Header.js","components/header/Header-Container.jsx","components/Nav/Nav.js","components/users/Users.jsx","redux/selectors.js","components/users/Users-Container.jsx","components/login/login.jsx","hoc/WithSuspense.js","App.js","index.js","components/common/preloader/Preloader.jsx","components/common/formsControler/FormsControler.js","utilits/validators/validators.js","redux/profile-reducer.js","hoc/WithAuthRedirect.js","redux/message-reducer.js"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","GetUsers","currentPage","pageSize","get","then","response","data","UnFollowUser","id","delete","FollowUser","post","GetProfile","Auth","GetStatus","UpdateStatus","status","put","Login","email","password","rememberMe","Logout","Boolean","window","location","hostname","match","initialData","dataBestFriends","name","avasrc","navbarReducer","state","initialState","dataUsers","totalUsersCount","isFetching","followingInProcces","Follow","userId","type","UnFollow","SetCurrentPage","ToggleIsFetching","FollowingInProcces","usersReducer","action","map","u","followed","users","totalCount","filter","login","isAuth","SetUserData","GetUserData","dispatch","a","resultCode","authReducer","initialized","appReducer","reducers","combineReducers","Profile","profileReducer","Message","messageReducer","Users","Navbar","App","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","src","alt","onClick","LogoutHOC","to","HeaderContainer","this","React","Component","connect","reload","Nav","pagesCount","Math","ceil","pages","i","push","el","onPageChanged","elem","key","photos","small","disabled","some","UnFollowThunkCreator","FollowThunkCreator","getUsers","UsersContainer","createSelector","pageNumber","GetUsersThunkCreator","Preloader","compose","items","WithAuthRedirect","ReduxLoginForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","requiredField","error","LoginHOC","message","messages","length","stopSubmit","_error","formData","SuspenseHOC","fallback","CurrentDialogContainer","lazy","ProfileContainer","InitializeApp","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","Textarea","input","meta","hasError","touched","value","maxLenghtCreator","maxLenght","dataPostOld","profile","AddPost","MyPostText","SetStatus","GetUserStatus","UpdateUserStatus","GetUsersProfile","NewOldPost","dataNewPostText","mapStateToPropsForRedirect","RedirectComponent","dataMessage","from","text","class","dataDialogsName","SendMessage","MyMessageText","MyNewMessage"],"mappings":"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","file":"static/js/main.7613748b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.07f42c61.gif\";","import * as axios from 'axios'\n\nconst instance = axios.create({\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n      \"API-KEY\":\"8f499ddb-6d41-430a-beb0-5377e3ad6d7e\"\n    },\n})\n\n\nexport const GetUsers =(currentPage,pageSize)=>{\n  return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n    .then(response=>response.data)\n}\n\nexport const UnFollowUser =(id)=>{\n  return instance.delete(`follow/${id}`)\n    .then(response=>response.data)\n}\n\nexport const FollowUser =(id)=>{\n  return instance.post(`follow/${id}`,{})\n  .then(response=>response.data)\n}\n\nexport const GetProfile =(id)=>{\n  return instance.get(`profile/` + id)\n}\n\nexport const Auth =()=>{\n  return instance.get(`auth/me`)\n}\n\nexport const GetStatus =(id)=>{\n  return instance.get(`profile/status/ `+id)\n}\n\nexport const UpdateStatus =(status)=>{\n  return instance.put(`profile/status`,{\n    status:status\n  })\n}\n\nexport const Login =(email, password, rememberMe)=>{\n  return instance.post(`auth/login`,{\n    email:email,\n    password:password,\n    rememberMe:false\n  })\n}\n\nexport const Logout =()=>{\n  return instance.delete(`auth/login`)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialData = {\n  dataBestFriends:[\n    {name:'Adolf', avasrc:'ava.jpg'},\n    {name:'Max', avasrc:'ava.jpg'},\n    {name:'Roma', avasrc:'ava.jpg'},\n    {name:'Adolf', avasrc:'ava.jpg'},\n    {name:'Max', avasrc:'ava.jpg'},\n    {name:'Roma', avasrc:'ava.jpg'}\n  ]\n};\n// начальные данные чтобы редакс мог запустить и отрендерить начальное состояние\n\nexport const navbarReducer=(state=initialData,action)=> {\n\n  return state;\n}\n\nexport default navbarReducer;\n","import {GetUsers,FollowUser,UnFollowUser} from '../api/api'\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET-USERS'\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\nconst SET_TOTAL_USERS_COUNT ='SET-TOTAL-USERS-COUNT'\nconst TOGGLE_IS_FETCHING ='TOGGLE-IS-FETCHING'\nconst FOLLOWING_IN_PROCCES = 'FOLLOWING-IN-PROCCES'\n\nlet initialState = {\n  dataUsers:[],\n  pageSize: 10,\n  totalUsersCount:0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProcces: []\n};\n\nconst usersReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        dataUsers: state.dataUsers.map(u=>{\n          if (u.id === action.userId){\n            return{...u, followed:true}\n          }\n          return u;\n        })\n      }\n    case UNFOLLOW:\n      return {\n        ...state,\n        dataUsers: state.dataUsers.map(u=>{\n          if (u.id === action.userId){\n            return{...u, followed:false}\n          }\n          return u;\n        })\n      }\n    case SET_USERS:{\n      return{...state, dataUsers:action.users}\n    }// в users мы закидываем данные пришедшие из action\n    case SET_CURRENT_PAGE:{\n      return{...state, currentPage: action.currentPage}\n    }\n    case SET_TOTAL_USERS_COUNT:{\n      return{...state, totalUsersCount: action.totalCount}\n    }\n    case TOGGLE_IS_FETCHING:{\n      return{...state, isFetching: action.isFetching}\n    }\n    case FOLLOWING_IN_PROCCES:{\n      return{...state,\n        followingInProcces: action.isFetching\n          ?[...state.followingInProcces, action.id]\n          :state.followingInProcces.filter(id=>id!==action.id)\n        }\n    }\n    default:\n      return state;\n  }\n}\n\nexport const Follow = (userId) => {\n  return {type: FOLLOW,userId: userId}\n}\nexport const UnFollow = (userId) => {\n  return {type: UNFOLLOW, userId: userId}\n}\nexport const SetUsers = (users) => {\n  return {type: SET_USERS, users: users}\n}\nexport const SetCurrentPage = (currentPage) => {\n  return {type: SET_CURRENT_PAGE, currentPage: currentPage}\n}\nexport const SetTotalUsersCount = (totalCount) => {\n  return {type: SET_TOTAL_USERS_COUNT, totalCount: totalCount}\n}\nexport const ToggleIsFetching = (isFetching) => {\n  return {type: TOGGLE_IS_FETCHING, isFetching: isFetching}\n}\nexport const FollowingInProcces = (isFetching,id) => {\n  return {type: FOLLOWING_IN_PROCCES, isFetching,id}\n}\n\nexport const GetUsersThunkCreator = (currentPage,pageSize)=>{\n\n  return (dispatch)=>{\n\n    dispatch(ToggleIsFetching(true))\n\n    GetUsers(currentPage,pageSize).then(response=>{\n        dispatch(ToggleIsFetching(false))\n        dispatch(SetUsers(response.items))\n        dispatch(SetCurrentPage(currentPage))\n        dispatch(SetTotalUsersCount(response.totalCount))\n      })\n    }\n}\n\nexport const FollowThunkCreator = (id)=>{\n\n  return (dispatch)=>{\n\n    dispatch(FollowingInProcces(true,id))\n    FollowUser(id).then(response=>{\n        if (response.resultCode===0){\n            dispatch(Follow(id))\n        }\n        dispatch(FollowingInProcces(false,id))\n    })\n  }\n}\n\nexport const UnFollowThunkCreator = (id)=>{\n\n  return (dispatch)=>{\n\n    dispatch(FollowingInProcces(true,id))\n    UnFollowUser(id).then(response=>{\n        if (response.resultCode===0){\n            dispatch(UnFollow(id))\n        }\n        dispatch(FollowingInProcces(false,id))\n    })\n  }\n}\n\nexport default usersReducer;\n","import {Auth,Login,Logout} from '../api/api'\nimport {stopSubmit} from 'redux-form'\n\n\nconst SET_USER_DATA = 'SET-USER-DATA'\n\nlet initialState = {\n  id: null,\n  login: null,\n  email: null,\n  isAuth: false\n}\n\n\nconst authReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.data,\n        isAuth: true\n      // данные пришедшие из action с сервера\n      //  перезатрут данные из state\n      }\n    default:\n      return state;\n  }\n}\n\nexport const SetUserData = (data) => {\n  return {\n    type: SET_USER_DATA,\n    data: data\n  }\n}\n\nexport const GetUserData = () => async (dispatch) => {\n  let response = await Auth()\n        if(response.data.resultCode ===0){\n          dispatch(SetUserData(response.data.data))\n        }\n}\n// можно использовать await\n// можно then\n// так-то пофиг, но как варик\n\nexport const LoginHOC = (email, password, rememberMe) => (dispatch) => {\n  Login(email, password, rememberMe).then(response=>{\n        if(response.data.resultCode ===0){\n          dispatch(GetUserData())\n        } else {\n          let message = response.data.messages.length>0 ? response.data.messages[0] :'Something is wrong'\n          let action = stopSubmit('login',{_error:message})\n          dispatch(action)\n        }\n  });\n}\n// stopSubmit это функия из redux-form\n// которая помогает обробатывать ошибки\n// должны передать в него название формы\n// которую должны остановить\n\n\nexport const LogoutHOC = () => (dispatch) => {\n  Logout().then(response=>{\n        if(response.data.resultCode ===0){\n          dispatch(SetUserData(null))\n          window.location.reload()\n        }\n  });\n}\n\n\nexport default authReducer;\n","import {GetUserData} from '../redux/auth-reducer'\n\n\n\nconst SET_INITIALIZED = 'SET-INITIALIZED'\n\nlet initialState = {\n  initialized:false\n}\n\n\nconst appReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case SET_INITIALIZED:\n      return {\n        ...state,\n        initialized: true\n      }\n    default:\n      return state;\n  }\n}\n\nexport const InitializedSuccess = () => {\n  return {\n    type: SET_INITIALIZED\n  }\n}\n\nexport const InitializeApp = () => (dispatch) => {\n  // dispatch(GetUserData())\n  let promise = dispatch(GetUserData())\n  // Дожидаемся ответа от функции\n  // потому что в GetUserData написали ретурн\n  promise.then(()=>{\n    dispatch(InitializedSuccess())\n  })\n}\n\n\n\nexport default appReducer;\n","import {combineReducers,createStore,applyMiddleware} from 'redux'\nimport profileReducer from './profile-reducer'\nimport messageReducer from './message-reducer'\nimport navbarReducer from './navbar-reducer'\nimport usersReducer from './users-reducer'\nimport authReducer from './auth-reducer'\nimport appReducer from './app-reducer'\nimport thunkMiddleware from 'redux-thunk'\nimport {reducer as formReducer} from 'redux-form'\n\nlet reducers = combineReducers({\n  Profile:profileReducer,\n  Message:messageReducer,\n  Users:usersReducer,\n  Navbar:navbarReducer,\n  Auth:authReducer,\n  App:appReducer,\n  form:formReducer\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom'\nimport '../.././App.css';\n\nconst Header = (props) => {\n\n  return (\n    <header className='header'>\n      <img src=\"logo.png\" alt=\"logo\" className='header__logo'></img>\n\n      <div className='header__auth'>\n        {props.isAuth\n          ?<div><p>{props.login}</p><button onClick={props.LogoutHOC}>LogOut</button></div>\n          :<NavLink to='/login'>LogIn</NavLink>}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from './Header'\nimport {connect} from 'react-redux';\nimport {LogoutHOC} from '../../redux/auth-reducer'\n\n\nclass HeaderContainer extends React.Component{\n\n\n\n  render(){\n    return <Header {...this.props}/>\n  }\n}\n\nlet mapStateToProps=(state)=>({\n    isAuth: state.Auth.isAuth,\n    login: state.Auth.login\n})\n// тут мы пишем какие данные нам нужны из стейта\n\nexport default connect(mapStateToProps,{LogoutHOC})(HeaderContainer)\n","import React from 'react';\nimport '../.././App.css';\n// import BestFriends from './BestFriends'\nimport {NavLink} from 'react-router-dom'\n\nconst Nav = (props) => {\n\n  // let state = props.store.getState();\n// пометка когда исправить в app.js\n\n  // такс бля, мы прокидываем store\n  // но там только функции, нет данных,\n  // но там есть функция которая даёт нам\n  // подтянуть данные, именно она сверху\n\n\n  // let dataRenderBestFriends =\n  //   state.Navbar.dataBestFriends.map( el => <BestFriends name={el.name} avasrc={el.avasrc}/>)\n// пометка когда исправить в app.js\n  return (\n    <nav className='nav'>\n      <NavLink to='/friends' className='nav__friends'>Friends</NavLink>\n\n      <NavLink to='/profile'>Profile</NavLink>\n      <NavLink to='/users'>Users</NavLink>\n      <NavLink to='/dialogs'>Messages</NavLink>\n      <NavLink to='/news'>News</NavLink>\n      <NavLink to='/music'>Music</NavLink>\n      <NavLink to='/settings'>Settings</NavLink>\n    </nav>\n  );\n}\n\n// <div className='nav__bestfriend'>\n//   {dataRenderBestFriends}\n//   </div>\n// пометка когда исправить в app.js\n// вернуть потом в пустое место между навлинками\n\nexport default Nav;\n","import React from 'react';\nimport '../.././App.css';\nimport {NavLink} from 'react-router-dom'\n\nlet Users = (props) =>{\n  let pagesCount = Math.ceil(props.totalUsersCount/props.pageSize);\n  let pages = [];\n  for (let i=1; i<=pagesCount;i++){\n    pages.push(i)\n  }\n\n  return(\n    <div className='users'>\n      <div className='users__page'>\n        {pages.map(el=>{\n          return <span className={props.currentPage === el && 'users__page-current'}\n          onClick={()=>{props.onPageChanged(el)}}>{el} </span>\n        })}\n      </div>\n      {props.dataUsers.map(elem=><div className='user__item' key={elem.id}>\n      <div className='user__item-face'>\n        <NavLink to={'/profile/'+elem.id}>\n          <img src={elem.photos.small!=null ? elem.photos.small:'ava.jpg'} alt=\"ava\" className='user__ava'/>\n        </NavLink>\n        {elem.followed\n          ?<button disabled={props.followingInProcces.some(id=>id===elem.id)} className='user__follow'\n            onClick={()=>{props.UnFollowThunkCreator(elem.id)}}>\n              Unfollow</button>\n\n          :<button disabled={props.followingInProcces.some(id=>id===elem.id)} className='user__follow'\n            onClick={()=>{props.FollowThunkCreator(elem.id)}}>\n              Follow</button>}\n      </div>\n        <div className='user__info'>\n          <div className='user__info-name'>{elem.name}</div>\n          <div className='user__info-status'>Прикольненько</div>\n          <div className='user__info-from'>Msk<br></br>RU</div>\n        </div>\n      </div>)}\n      <button className='users-more'>Show more</button>\n    </div>\n  )\n}\n\n\n\nexport default Users;\n","import {createSelector} from 'reselect'\n\nexport const getUsers =(state)=>{\n  return state.Users.dataUsers\n}\n\nexport const pageSize =(state)=>{\n  return state.Users.pageSize\n}\n\n// export const dataUsersSelector = (state)=>{\n//   return dataUsers(state).filter(u=>true)\n// }\n\nexport const dataUsersSuperSelector = createSelector(getUsers,pageSize,\n  (dataUsers, pageSize)=>{\n    return dataUsers.filter(u=>true)\n})\n// эта функция создана с бибилиотекой реселектом для того чтобы\n// не запускать сложную логику которая может лежать в этих функциях\n// она будет запускаться только после определения\n// есть ли разница в требуемом от неё ответе\n// данные для сравнения она берёт из более простого селекора\n// dataUser\n// вообщем она вызывается только если входные данные меняются\n// если не меняются следовательно ответ функции тоже не будет меняться\n// выпуск 83\n// селектор может зависить от многих селекторов\n// getUsers,pageSize, описание от чего зависит большой селетор\n","import React from 'react';\nimport {Follow,UnFollow,SetCurrentPage,FollowingInProcces,GetUsersThunkCreator,UnFollowThunkCreator,FollowThunkCreator} from '../.././redux/users-reducer'\nimport {connect} from 'react-redux';\nimport Users from './Users'\nimport Preloader from '../common/preloader/Preloader'\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect'\nimport {compose} from 'redux'\nimport {getUsers,pageSize} from '../../redux/selectors'\n\n\nclass UsersContainer extends React.Component{\n\n  componentDidMount() {\n    this.props.GetUsersThunkCreator(this.props.currentPage,this.props.pageSize)\n  }\n  onPageChanged=(pageNumber)=>{\n    this.props.GetUsersThunkCreator(pageNumber,this.props.pageSize)\n  }\n\n  render() {\n    return <>\n      {this.props.isFetching?\n        <Preloader/>\n        :null}\n      <Users\n        totalUsersCount={this.props.totalUsersCount}\n        pageSize={this.props.pageSize}\n        currentPage={this.props.currentPage}\n        dataUsers={this.props.dataUsers}\n        onPageChanged={this.onPageChanged}\n        UnFollow={this.props.UnFollow}\n        Follow={this.props.Follow}\n        followingInProcces={this.props.followingInProcces}\n        UnFollowThunkCreator={this.props.UnFollowThunkCreator}\n        FollowThunkCreator={this.props.FollowThunkCreator}\n      />\n    </>\n  }\n}\n\nlet mapStateToProps =(state)=>{\n  return {\n    dataUsers: getUsers(state),\n    pageSize: pageSize(state),\n    totalUsersCount: state.Users.totalUsersCount,\n    currentPage:state.Users.currentPage,\n    isFetching:state.Users.isFetching,\n    followingInProcces:state.Users.followingInProcces\n  }\n}\n// можно настроить селокторы для каждого пропса\n// но нах это нужно не знаю\n// он говорит нужно, для примера 2 сделал\n\n// сюда можно воткнуть dataUsersSuperSelector(state)\n// и передать туда что-то\n// она не будет постояно вызываться и грузить процессор\n// а зупуститься только когда нужно\n\nexport default compose(\n  connect(mapStateToProps,\n    {Follow, UnFollow, SetCurrentPage,\n      FollowingInProcces, GetUsersThunkCreator,\n      UnFollowThunkCreator,FollowThunkCreator}),\n  WithAuthRedirect\n)(UsersContainer)\n","import React from 'react';\nimport '../.././App.css';\nimport {reduxForm,Field} from 'redux-form'\nimport {Input} from '../common/formsControler/FormsControler'\nimport {requiredField} from '../../utilits/validators/validators'\nimport {connect} from 'react-redux'\nimport {LoginHOC} from '../../redux/auth-reducer'\nimport {Redirect} from 'react-router-dom'\n\nconst LoginForm = (props) => {\n  return (\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field placeholder='Email'\n            name='email'\n            component={Input}\n            validate={[requiredField]}\n          />\n        </div>\n        <div>\n          <Field placeholder='Password'\n            name='password'\n            component={Input}\n            validate={[requiredField]}\n          />\n        </div>\n        <div>\n          <Field component={Input}\n            name='rememberMe'\n            type='checkbox'\n            // validate={[requiredField]}\n          /> remember me\n        </div>\n\n        {props.error && <div className='form-login-error'>{props.error}</div>}\n\n        <div>\n          <button>LogIn</button>\n        </div>\n      </form>\n  )\n}\n// {props.error && <div className='form-login-error'>{props.error}</div>}\n// это значит если в пропсах прихлдит ерор\n// покажи этот див\n\n\nconst ReduxLoginForm = reduxForm({\n  form:'login'\n})(LoginForm)\n// это название формы\n// оно нужно будет для stopSubmit\n\nconst Login =(props)=>{\n\n  const onSubmit=(formData)=>{\n    props.LoginHOC(formData.email,formData.password,formData.rememberMe)\n  }\n\n  if (props.isAuth) {\n    return <Redirect to='/profile'/>\n  }\n\n  return(\n    <div>\n      <h1>LogIn</h1>\n      <ReduxLoginForm onSubmit={onSubmit}/>\n    </div>\n  )\n}\n\nconst mapStateToProps=(state)=>({\n  isAuth: state.Auth.isAuth\n})\n\nexport default connect(mapStateToProps,{LoginHOC})(Login)\n","import React, { Suspense } from 'react';\nimport Preloader from '../components/common/preloader/Preloader'\n\nconst SuspenseHOC = (Component) =>{\n  return (props)=>{\n    return (<Suspense fallback={<Preloader/>}>\n        <Component {...props} />\n      </Suspense>\n    )\n  }\n}\n\nexport default SuspenseHOC\n","import React, { Suspense } from 'react';\nimport './App.css';\nimport HeaderContainer from './components/header/Header-Container'\nimport Nav from './components/Nav/Nav'\nimport UsersContainer from './components/users/Users-Container'\nimport {HashRouter, Route} from 'react-router-dom'\nimport Login from './components/login/login'\nimport {InitializeApp} from './redux/app-reducer'\nimport {connect} from 'react-redux';\nimport Preloader from './components/common/preloader/Preloader'\nimport SuspenseHOC from './hoc/WithSuspense'\n\nconst CurrentDialogContainer = React.lazy(() => import('./components/dialogs/message/CurrentDialog-Container'));\nconst ProfileContainer = React.lazy(() => import('./components/profile/Profile-Container'));\n\nclass App extends React.Component {\n\n  componentDidMount(){\n    this.props.InitializeApp()\n  }\n\n  render(){\n\n    if(!this.props.initialized){\n      return <Preloader/>\n    }\n    return (\n      <HashRouter>\n        <div className='app-wrapper'>\n          <HeaderContainer/>\n          <Nav/>\n          <Route path='/profile/:userId?'\n            render={SuspenseHOC(ProfileContainer)}\n          />\n          <Route path='/dialogs'\n            render={SuspenseHOC(CurrentDialogContainer)}\n          />\n          <Route path='/users'\n            render={ () => <UsersContainer/>}\n          />\n          <Route path='/login'\n            render={ () => <Login/>}\n          />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n// <Nav store={props.store}/>\n// чтобы отрисовывать вкладку друзей\n// потом нужно будет сделать контейнерную для нав\n\n\nlet mapStateToProps=(state)=>({\n    initialized:state.App.initialized\n})\n\n\nexport default connect(mapStateToProps,{InitializeApp})(App)\n\n// export default compose(\n//   connect(mapStateToProps,{GetUserData}),\n//   withRouter\n// )(App)\n\n// он добавлял withRouter в 80 выпуске\n// хз зачем, у меня и без него работало\n","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport {Provider} from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App store={store}/>\n    </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import React from 'react';\nimport preloader from '../../../img/preloader.gif'\n\nlet Preloader = (props) => {\n  return <div className='preloader'>\n          <img src={preloader} alt='Wait :)'/>\n        </div>\n}\n\nexport default Preloader\n","import React from 'react';\nimport '../../../App.css';\n\nexport const Textarea = ({input,meta,...props}) =>{\n//мы деструктеризируем пропсы чтобы передать\n// то что нужно для работы тексэрии\n// деструктуризация и рестоператор-эти темы\nconst hasError = meta.touched&&meta.error\n\n  return (\n    <div className={(hasError?'form-error':'')}>\n      <textarea {...input} {...props}/>\n      {hasError&&<p className='form-control-text'>{meta.error}</p>}\n    </div>\n  )\n}\n// если мы из мета пришли данные что\n// мы ронули форму и\n// если в мета пришол ерор из валидатора\n// покажи спан и присвой класс\n\n\nexport const Input = ({input,meta,...props}) =>{\n\nconst hasError = meta.touched&&meta.error\n\n  return (\n    <div className={(hasError?'form-error':'')}>\n      <input {...input} {...props}/>\n      {hasError&&<p className='form-control-text'>{meta.error}</p>}\n    </div>\n  )\n}\n","export const requiredField = value =>{\n  if (value) return undefined\n  return 'Field is required'\n}\n\nexport const maxLenghtCreator = (maxLenght) => value =>{\n  // if (value) return undefined\n  if (value.length>maxLenght) return 'To many words'\n  return undefined\n}\n","import {GetProfile,GetStatus,UpdateStatus} from '../api/api'\n\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\nconst SET_STATUS = 'SET-STATUS'\n// const UPDATE_STATUS ='UPDATE-STATUS'\n//\nconst SET_USER_ID = 'SET-USER-ID'\n//\nlet initialState = {\n  dataPostOld:[\n    {id:1, message:'Maxim'},\n    {id:2, message:'Stas'},\n    {id:3, message:'Kirill'},\n    {id:4, message:'Vanya'},\n    {id:5, message:'Scot'},\n    {id:6, message:'Tom'}\n  ],\n  profile: null,\n  status: '',\n  // id: 2\n};\n// начальные данные чтобы редакс мог запустить и отрендерить начальное состояние\n\nconst profileReducer=(state=initialState,action)=> {\n  switch(action.type) {\n    case ADD_POST:\n      let NewOldPost = {\n        id: 5,\n        message: action.MyPostText,\n      };\n      return {\n        ...state,\n        dataPostOld: [...state.dataPostOld,NewOldPost],\n        dataNewPostText:''\n      }\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile\n      }\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status\n      }\n    // case UPDATE_STATUS:\n    //   return {\n    //     ...state,\n    //     status: action.status\n    //   }\n    //\n    case SET_USER_ID:\n      return {\n        ...state,\n        id: action.id\n      }\n      // debugger\n    //\n    default:\n      return state;\n  }\n}\n\nexport const AddPost = (MyPostText) => {\n  return {\n    type: ADD_POST,\n    MyPostText:MyPostText\n  }\n}\n\nexport const SetUsersProfile = (profile) => {\n  return { type:SET_USER_PROFILE, profile: profile }\n}\nexport const SetStatus = (status) => {\n  return { type:SET_STATUS, status: status }\n}\n// export const UpdateStatus = (status) => {\n//   return { type:UPDATE_STATUS, status: status }\n// }\n\nexport const GetUserStatus = (id) => async (dispatch)=> {\n  let response = await GetStatus(id)\n      dispatch(SetStatus(response.data))\n}\nexport const UpdateUserStatus = (status) =>(dispatch)=> {\n  UpdateStatus(status).then(response=>{\n    if(response.data.resultCode===0){\n      dispatch(SetStatus(status))\n    }\n  });\n}\nexport const GetUsersProfile = (id) =>(dispatch)=> {\n  GetProfile(id).then(response=>{\n      dispatch(SetUsersProfile(response.data))\n  });\n}\n\n\n\n// не юзаная ((((\nexport const SetUsersId = (id) => {\n  return { type:SET_USER_ID, id: id }\n}\n//\n\nexport default profileReducer;\n","import {Redirect} from 'react-router-dom'\nimport React from 'react';\nimport {connect} from 'react-redux';\n\nlet mapStateToPropsForRedirect=(state)=>{\n  return{\n    isAuth:state.Auth.isAuth\n  }\n}\n\nexport const WithAuthRedirect=(Component)=>{\n  class RedirectComponent extends React.Component {\n    render(){\n      if (!this.props.isAuth){\n        return <Redirect to='/login'/>\n      }\n      return <Component {...this.props} />\n    }\n  }\n\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n\n  return ConnectedAuthRedirectComponent\n}\n","// const UPDATE_NEW_MESSAGE_AREA = 'UPDATE-NEW-MESSAGE-AREA'\nconst ADD_MESSAGE = 'ADD-MESSAGE'\n\nlet initialData = {\n  dataMessage:[\n    {from:'me', text:'Hi', class:'me', avasrc:'ava.jpg'},\n    {from:'not_me', text:'Hi))', avasrc:'ava.jpg'},\n    {from:'me', text:'How do you do?', class:'me', avasrc:'ava.jpg'},\n    {from:'not_me', text:'How do you do?', avasrc:'ava.jpg'},\n    {from:'me', text:'Cool', class:'me', avasrc:'ava.jpg'},\n    {from:'not_me', text:'Cool)))', avasrc:'ava.jpg'}\n  ],\n  dataDialogsName:[\n    {id:1, name:'Maxim'},\n    {id:2, name:'Stas'}\n  ],\n  // dataNewMessageText:'',\n};\n// начальные данные чтобы редакс мог запустить и отрендерить начальное состояние\n\nconst messageReducer=(state=initialData,action)=> {\n  switch(action.type) {\n    case ADD_MESSAGE:\n      let MyNewMessage = {\n        from:'me',\n        text:action.MyMessageText,\n        class:'me',\n        avasrc:'ava.jpg'\n      }\n      return {\n        ...state,\n        dataMessage: [...state.dataMessage, MyNewMessage],\n        // dataNewMessageText: ''\n      };\n    // case UPDATE_NEW_MESSAGE_AREA:\n    //   return {\n    //     ...state,\n    //     MyMessageText: action.newText\n    //   };\n    default:\n      return state;\n  }\n}\n\nexport const SendMessage = (MyMessageText) => {\n  return {\n    type: ADD_MESSAGE,\n    MyMessageText:MyMessageText\n  }\n}\n// export const UpdateNewMessageArea = (text) => {\n//     return { type:UPDATE_NEW_MESSAGE_AREA, newText: text }\n// }\n\nexport default messageReducer;\n"],"sourceRoot":""}